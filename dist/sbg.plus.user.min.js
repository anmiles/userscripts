"use strict";window.__sbg_plus_version="0.9.92";Object.typedKeys=(obj,allKeys)=>{function isOwnKey(key){return allKeys.includes(String(key))}return Object.keys(obj).filter(isOwnKey)};Object.typedEntries=(obj,allKeys)=>Object.typedKeys(obj,allKeys).map((key=>[key,obj[key]]));const layerNames=["base","highlights","lines_built","lines_temp","lines","points","regions_built","regions_shared","regions","temp_lines"];const urlTypes=["desktop","mobile","script","intel","cui","eui"];const langs=["ru","en"];(function(){class EventWatcher{constructor(eventTypes){this.eventTypes=eventTypes;this.listeners={};this.events={};this.eventTypes.map((eventType=>{this.events[eventType]=[];this.listeners[eventType]=[]}));this.watch()}emit(eventType,eventData,eventOptions){this.trigger(this.listeners[eventType],{eventData:eventData,eventOptions:eventOptions});this.events[eventType].push({eventData:eventData,eventOptions:eventOptions});return this}on(eventType,handler,listenerOptions){const listener={handler:handler,listenerOptions:listenerOptions,enabled:true};this.listeners[eventType].push(listener);if(listenerOptions.previous){this.events[eventType].map((({eventData:eventData,eventOptions:eventOptions})=>{this.trigger([listener],{eventData:eventData,eventOptions:eventOptions})}))}return this}off(eventType,eventOptions){this.filter(this.listeners[eventType],{eventOptions:eventOptions}).map((listener=>{listener.enabled=false}));return this}filter(listeners,_filterData){return listeners}isMatchEventOptions(_listener,_eventOptions){return true}trigger(listeners,{eventData:eventData,eventOptions:eventOptions}){listeners.filter((listener=>this.isMatchEventOptions(listener,eventOptions))).map((listener=>{if(!listener.enabled){return}if(listener.listenerOptions.once){listener.enabled=false}listener.handler(eventData)}))}}const consoleWatcherEventTypes=["log","warn","error","info","debug","trace"];class ConsoleWatcher extends EventWatcher{constructor(){super(consoleWatcherEventTypes)}watch(){consoleWatcherEventTypes.map((eventType=>{((originalMethod,originalError)=>{console[eventType]=(...args)=>{const isError=eventType==="error"||args.filter((arg=>arg instanceof Error)).length>0;const lines=args.map((arg=>arg instanceof Error?[arg.message,arg.stack].join("\n"):!arg?(arg=>{console.error("null argument",{arg:arg,args:args});return"null"})(arg):stringify(arg,"string")));this.emit(isError?"error":eventType,{message:lines.map((line=>line.trim())).join("\n"),originalMethod:(...data)=>{(isError?originalError:originalMethod).call(console,...data)}},{})}})(console[eventType],console.error)}))}}const logs=[];const logParts=["time","eventType","message"];const loggers=["console","logs"];const loggerOptions={console:["time","message"],logs:["message"]};class LogEntry{constructor(eventType,message){this.eventType=eventType;this.message=message}format(logger){return logParts.filter((logPart=>loggerOptions[logger].includes(logPart))).map((logPart=>this.formatPart(logPart,this.eventType,this.message))).join(" ")}formatPart(logPart,eventType,message){switch(logPart){case"time":return this.getTimeString();case"eventType":return eventType==="error"?"ERROR":eventType;case"message":return message}}getTimeString(){const date=new Date;const time=[date.getHours(),date.getMinutes(),date.getSeconds()].map((value=>value.toString().padStart(2,"0"))).join(".");const ms=date.getMilliseconds().toString().padStart(3,"0");return`${time}:${ms}`}}const consoleWatcher=new ConsoleWatcher;consoleWatcherEventTypes.map((eventType=>{consoleWatcher.on(eventType,(({message:message,originalMethod:originalMethod})=>{const logEntry=new LogEntry(eventType,message);const logsLine=logEntry.format("logs");logs.push(logsLine);const consoleLine=logEntry.format("console");originalMethod(consoleLine);if(eventType==="error"&&window.__sbg_preset==="full"){alert(consoleLine)}}),{})}));const stringifyModes=["json","keys","string"];function stringify(obj,mode){if(obj===null||obj===undefined){return typeof obj}switch(mode){case"json":return JSON.stringify(obj);case"keys":return`[${Object.keys(obj).join(", ")}]`;case"string":return String(obj);default:return`unknown mode '${String(mode)}', expected one of [${stringifyModes.join(", ")}]`}}window.__sbg_debug_object=(message,obj,mode="json")=>{var _a;const stack=(_a=(new Error).stack)===null||_a===void 0?void 0:_a.replace(/^Error/,"");for(const key in obj){console.debug(`${message}: ${key} = ${stringify(obj[key],mode)}`);console.debug(stack)}};window.__sbg_onerror_handlers=[];window.__sbg_onerror_handlers.push(((event,_source,lineno,colno,error)=>{const eventType=typeof event==="string"?event:event.type;console.error(`${eventType} on ${lineno}:${colno}`,error)}));window.onerror=function(event,source,lineno,colno,error){window.__sbg_onerror_handlers.forEach((handler=>{handler(event,source,lineno,colno,error)}));return true};console.log(`SBG plus, version ${window.__sbg_plus_version}`);console.log(`started at ${(new Date).toISOString()}`);console.log(`userAgent: ${navigator.userAgent}`);const builderButtons=["home","allLines","builder","undo","clear","route","copy","paste","help"];class Label{constructor(values){this.values=values}format(data){const formattedLabel=new Label({...this.values});for(const lang of langs){formattedLabel.values[lang]=formattedLabel.values[lang].replace(/\$\{(.+?)\}/g,((_,key)=>{const value=data[key];if(!value){return""}if(typeof value==="string"){return value}return value.toString()}))}return formattedLabel}toString(){return this.values[window.__sbg_language]}}const labels={save:new Label({ru:"Сохранить",en:"Save"}),close:new Label({ru:"Закрыть",en:"Close"}),ymaps:new Label({ru:"Яндекс Карты",en:"Yandex Maps"}),settings:{title:new Label({ru:"Настройки скриптов",en:"Scripts settings"}),button:new Label({ru:"Настройки",en:"Settings"}),version:new Label({ru:"Версия SBG+",en:"SBG+ Version"}),logs:new Label({ru:"Логи",en:"Logs"}),advanced:new Label({ru:"Все настройки",en:"All settings"})},toasts:{back:new Label({ru:'Нажмите кнопку "Назад" ещё раз\nдля выхода из игры',en:'Press "Back" button again to exit the game'}),logs:new Label({ru:"Логи скопированы в буфер обмена",en:"Logs has been copied into the clipboard"}),cuiUpdated:new Label({ru:"Скрипт Николая обновлён до версии ${currentVersion}",en:"Nicko script has been updated to ${currentVersion}"}),localWarning:new Label({ru:"ВНИМАНИЕ!\nВы используете тестовую версию.\nВсе обновления скриптов отключены.\nОбратитесь на форум за стабильной версией приложения.",en:"WARNING!\nYou are using a test version.\nAll script updates are off.\nRefer to forums for a stable version."}),noGeoApp:new Label({ru:"Не найдено ни одного приложения карт. Координаты скопированы в буфер обмена.",en:"Maps application is not found. Coordinates has been copied to the clipboard."}),noLayer:new Label({ru:"Слой ${layerName} не существует",en:"Layer ${layerName} does not exist"}),featureSwitchedOff:new Label({ru:"${label} временно не работает и отключён до исправления его автором",en:"${label} is temporarily broken and disabled until fixing by its author"})},builder:{buttons:{home:{title:new Label({ru:"Я здесь",en:"Set home"}),description:new Label({ru:'устанавливает "домашнее местоположение", с которого игра всегда будет открываться в этом браузере',en:'sets "home location", which game will always start with in this browser'})},allLines:{title:new Label({ru:"Все линии",en:"All lines"}),description:new Label({ru:"включает/отключает показ реально существующих линий и регионов",en:"toggles currently existing lines and regions"})},builder:{title:new Label({ru:"Конструктор",en:"Builder"}),description:new Label({ru:"включает/отключает режим конструктора: нажатие на точку начинает новую линию, нажатие на другую точку - заканчивает линию",en:"toggles builder mode: click first point to start new line, click another point to finish the line"})},undo:{title:new Label({ru:"Отменить",en:"Undo"}),description:new Label({ru:"стирает последнюю построенную линию/регион",en:"removes last built line/region"})},clear:{title:new Label({ru:"Отменить всё",en:"Clear"}),description:new Label({ru:"стирает все построенные линии и регионы",en:"removes all build lines and regions"})},route:{title:new Label({ru:"Маршрут",en:"Print route"}),description:new Label({ru:"показывает все построенные линии, в виде списка в порядке постройки",en:"shows all built lines as a list in the order of building"})},copy:{title:new Label({ru:"Копировать",en:"Copy"}),description:new Label({ru:"(Ctrl-C) копирует все построенные линии в буфер обмена",en:"(Ctrl-C) copies all built lines into the clipboard"})},paste:{title:new Label({ru:"Вставить",en:"Paste"}),description:new Label({ru:"(Ctrl-V) вставляет ранее построенные линии из буфера обмена",en:"(Ctrl-V) pastes previously built lines from the clipboard"})},help:{title:new Label({ru:"Помощь",en:"Help"}),description:new Label({ru:"показывает инструкции",en:"shows instructions"})}},messages:{setHome:new Label({ru:"Всегда открывать SBG на текущем местоположении?",en:"Always open SBG using currently opened location?"}),deleteHome:new Label({ru:'Забыть "домашнее местоположение" SBG?',en:'Forget "home location"?'}),copied:new Label({ru:"Данные скопированы в буфер обмена",en:"Data has been copied into the clipboard"})},issues:{title:new Label({ru:"Известные ограничения и проблемы",en:"Known limitations and problems"}),list:[new Label({ru:"Не всегда рисуется линия, потому что если при нажатии мышкой сдвинуть карту хоть на миллиметр - карта думает, что её двигают, а не кликают, и никак не реагирует",en:"Lines are not always being drawn, because clicking mouse button when moving map even one pixel ahead will make the map treat this click as a moving action and do not react as expected"}),new Label({ru:"Если два раза нажать на точку - она остаётся оранжевой, даже если закончить линию",en:"Point leaves orange when clicking twice, even when line has been finished"}),new Label({ru:"Если нажать на точку, а потом подвинуть карту - она перестаёт быть оранжевой",en:"Orange point stops to be orange if move map"})]},help:{title:new Label({ru:"Конструктор",en:"Builder"}),buttons:new Label({ru:"Кнопки",en:"Buttons"})},validationErrors:{json:new Label({ru:"Текст должен быть валидным JSON-объектом",en:"Text should be a valid JSON object"}),empty:new Label({ru:"Ничего нет",en:"Nothing found"}),object:new Label({ru:"Данные должны быть объектом",en:"Data should be an object"}),objectProperties:new Label({ru:"Объект с данными должен содержать два объекта: 'points' и 'lines'",en:"Data object should contain two objects: 'points' and 'lines'"}),pointProperties:new Label({ru:"Каждый объект в 'points' должен содержать поля: 'guid' (string), 'title' (string) и 'coords' (object)",en:"Each object in 'points' should contain properties: 'guid' (string), 'title' (string) and 'coords' (object)"}),pointCoords:new Label({ru:"Каждый объект в 'points' должен содержать массив 'coords', из двух координат типа (number)",en:"Each object in 'points' should contain array 'coords' of two coordinates of type (number)"}),lines:new Label({ru:"Массив 'lines' должен состоять из массивов координат линий",en:"Array 'lines' should contain arrays of line coordinates"}),linesCoords:new Label({ru:"Каждый массив в 'lines' должен состоять из двух массивов координат точек",en:"Each array in 'lines' should contain two arrays of point coordinates"}),unknownError:new Label({ru:"Причина ошибки неизвестна: ошибка произошла до определения возможных причин",en:"Error reason is unknown: the error ocurred before defining possible reasons"})}}};console.log("created labels");class Settings{constructor(){this.storageKey="sbg-plus-settings";try{const str=localStorage.getItem(this.storageKey);const savedFeatures=str?jsonSelect(str,["features"]):{};this.features=new Map(Object.typedEntries(savedFeatures,Object.keys(savedFeatures)))}catch{this.features=new Map}}getFeature(featureKey){return this.features.get(featureKey)}setFeature(featureKey,value){this.features.set(featureKey,value);return this}cleanupFeatures(){const featureKeys=Object.keys(features.keys);Array.from(this.features.keys()).filter((key=>!featureKeys.includes(key))).forEach((key=>{this.features.delete(key)}))}save(){const json={};json.features=Object.fromEntries(this.features);const str=JSON.stringify(json);localStorage.setItem(this.storageKey,str)}}const settings=new Settings;console.log("created settings");const featureGroupNames=["scripts","base","cui","eui","animations","toolbar","fire","inventory","leaderboard","info","buttons","draw","other","custom","tests"];const featureGroups={scripts:{ru:"Скрипты",en:"Scripts"},base:{ru:"Основные настройки",en:"Basic settings"},cui:{ru:"Скрипт Николая",en:"Nicko script"},eui:{ru:"Скрипт Егора",en:"Egor script"},animations:{ru:"Анимации",en:"Animations"},toolbar:{ru:"Боковая панель",en:"Toolbar"},fire:{ru:"Атака",en:"Fire"},inventory:{ru:"Инвентарь",en:"Inventory"},leaderboard:{ru:"Лидеры",en:"Leaderboard"},info:{ru:"Информация о точке",en:"Point info"},buttons:{ru:"Кнопки",en:"Buttons"},draw:{ru:"Рисование",en:"Draw"},other:{ru:"Прочие настройки",en:"Other settings"},custom:{ru:"Мои настройки",en:"My settings"},tests:{ru:"Тесты",en:"Tests"}};const featureTriggers=["","pageLoad","cuiTransform","mapReady","fireClick"];class FeatureBase{constructor(kind,key,labelValues,options){var _a,_b,_c,_d,_e;this.toggleValue=false;this.kind=kind;this.key=key;this.label=new Label(labelValues);this.group=options.group;this.trigger=options.trigger;this.broken=(_a=options.broken)!==null&&_a!==void 0?_a:false;this.public=(_b=options.public)!==null&&_b!==void 0?_b:false;this.simple=(_c=options.simple)!==null&&_c!==void 0?_c:false;this.desktop=(_d=options.desktop)!==null&&_d!==void 0?_d:false;this.unchecked=(_e=options.unchecked)!==null&&_e!==void 0?_e:false;features.add(this,options)}setEnabled(value){settings.setFeature(this.key,value);features.inherit(this,value)}isEnabled(allowBroken=false){var _a;return(!this.broken||allowBroken)&&((_a=this.isExplicitlyEnabled())!==null&&_a!==void 0?_a:this.isImplicitlyEnabled())}isExplicitlyEnabled(){return settings.getFeature(this.key)}isImplicitlyEnabled(){return this.isAvailable()&&this.isIncluded(this.getPreset())&&!(typeof this.unchecked==="function"?this.unchecked():this.unchecked)}isAvailable(){var _a,_b;const lastUsername=localStorage.getItem("sbg-plus-last-username");return(isMobile()||this.desktop)&&(this.public||!!lastUsername&&((_b=(_a=protectedFeatures[lastUsername])===null||_a===void 0?void 0:_a.includes(this))!==null&&_b!==void 0?_b:false)||this.getPreset()==="full"||!!localStorage.getItem("sbg-plus-test-mode"))}isSimple(){return this.simple}toggle(value=!this.toggleValue){const attributeKey=`data-feat-${this.key}`;this.toggleValue=value;if(value){document.body.setAttribute(attributeKey,"")}else{document.body.removeAttribute(attributeKey)}features.emit("toggle",{feature:this,value:value},{});return value}exec(data){if(!this.isEnabled()){console.log(`skipped ${this.key}`);return}try{this.func(data);this.toggle(true);console.log(`executed ${this.key}`)}catch(ex){console.error(`failed ${this.key}`,ex)}}isIncluded(presetName){const preset=isPreset(presetName)?presets[presetName]:presets.browser;return preset.length===0||preset.includes(this)}getPreset(){return window.__sbg_preset}}class Feature extends FeatureBase{constructor(func,labelValues,options){const wrapper=()=>{const el=this.getElement();if(el){func(el)}};super("feature",func.name,labelValues,options);this.func=wrapper;this.requires=options.requires}getElement(){if(this.requires){const required=this.requires();if(!required||typeof required==="object"&&"length"in required&&required.length===0){throw new Error("requirement not met")}return required}return{}}}window.Feature=Feature;class Transformer extends FeatureBase{constructor(func,labelValues,options){super("transformer",func.name,labelValues,options);this.func=func}}function isTransformer(feature){return feature.kind==="transformer"}const featuresEventTypes=["add","inherit","toggle"];class Features extends EventWatcher{constructor(){super(featuresEventTypes);this.keys={};this.groups={};this.triggers={};this.parents={};Object.typedKeys(featureGroups,featureGroupNames).map((key=>this.groups[key]=[]));featureTriggers.map((key=>this.triggers[key]=[]))}get(func){return this.keys[func.name]}add(feature,{parent:parent}){this.keys[feature.key]=feature;this.groups[feature.group].push(feature);this.triggers[feature.trigger].push(feature);if(parent){this.parents[feature.group]={parent:feature,dependency:parent.dependency}}this.emit("add",feature,{})}inheritAll(){Object.values(this.parents).forEach((({parent:parent,dependency:dependency})=>{const children=this.getChildren(parent);if(dependency==="all"&&parent.isExplicitlyEnabled()){children.forEach((child=>this.emit("inherit",{feature:child,value:true},{})))}if(dependency==="any"&&!parent.isExplicitlyEnabled()&&children.filter((child=>child.isEnabled())).length>0){this.emit("inherit",{feature:parent,value:true},{})}}))}inherit(feature,value){const featureParent=this.parents[feature.group];if(!featureParent){return}const{dependency:dependency}=featureParent;const parent=this.getParent(feature);if(parent){const children=this.getChildren(parent);if(value===!parent.isEnabled()&&(dependency==="any"===value||children.filter((child=>child.isEnabled()!==value)).length===0)){this.emit("inherit",{feature:parent,value:value},{})}}else{const children=this.getChildren(feature);if(dependency==="all"===value){children.forEach((child=>this.emit("inherit",{feature:child,value:value},{})))}}}watch(){return}getParent(feature){const parents=this.parents[feature.group];const parent=parents===null||parents===void 0?void 0:parents.parent;return parent&&parent.func!==feature.func?parent:undefined}getChildren(feature){const parents=this.parents[feature.group];const parent=parents===null||parents===void 0?void 0:parents.parent;return parent&&parent.func===feature.func?this.groups[feature.group].filter((child=>child.func!==feature.func)):[]}}const features=new Features;let group="base";group="scripts";new Feature(loadCUI,{ru:"Скрипт Николая",en:"Nicko script"},{public:true,simple:true,group:group,trigger:""});new Feature(loadEUI,{ru:"Скрипт Егора",en:"Egor script"},{public:true,simple:true,group:group,trigger:"mapReady",desktop:true});new Feature(showBuilderPanel,{ru:"Конструктор (draw tools)",en:"Builder (draw tools)"},{public:true,simple:true,group:group,trigger:"mapReady",desktop:true});new Feature(showFeatureToggles,{ru:"Показать кнопки для быстрого переключения между фичами",en:"Show buttons for quick toggling features"},{group:group,trigger:"mapReady"});group="base";new Feature(enableBackButton,{ru:"Разрешить кнопку Back",en:"Enable back button"},{public:true,group:group,trigger:"mapReady"});new Feature(updateLangCacheAutomatically,{ru:"Автоматически обновлять кэш языка",en:"Update language cache automatically"},{public:true,group:group,trigger:"mapReady",desktop:true});new Feature(fixBlurryBackground,{ru:"Размывать фон за полупрозрачными окнами",en:"Fix blurry background in popups"},{public:true,group:group,trigger:"mapReady",desktop:true});new Feature(alignSettingsButtonsVertically,{ru:"Выровнять кнопки настроек по ширине",en:"Align settings buttons vertically"},{public:true,group:group,trigger:"mapReady",desktop:true,requires:()=>$(".settings")});new Feature(fixCompass,{ru:"Починить компас",en:"Fix compass"},{public:true,group:group,trigger:"mapReady"});new Feature(showLevelUpCongratulations,{ru:"Показывать поздравления с новым уровнем",en:"Show level-up congratulations"},{public:true,group:group,trigger:"mapReady",requires:()=>window.__sbg_variable_self_data});new Feature(hideInventoryLimit,{ru:"Не показывать лимит инвентаря",en:"Hide inventory limit"},{public:true,group:group,trigger:"mapReady",unchecked:true,requires:()=>$("#self-info__inv")});new Feature(disableCopyingLogsWithThreeFingers,{ru:"Отключить копирование логов тремя пальцами",en:"Disable copying logs with three fingers"},{public:true,group:group,trigger:"mapReady",unchecked:true});group="cui";new Transformer(disableClusters,{ru:"Отключить ромашку",en:"Disable clusters"},{public:true,simple:true,group:group,trigger:"cuiTransform"});new Transformer(disableAttackZoom,{ru:"Отключить изменение зума при атаке",en:"Disable changing zoom when attack"},{public:true,simple:true,group:group,trigger:"cuiTransform"});new Transformer(unlockCompassWhenRotateMap,{ru:"Разблокировать компас при вращении карты",en:"Unlock compass when rotate map"},{public:true,group:group,trigger:"cuiTransform"});new Feature(fixSortButton,{ru:"Исправить расположение кнопки сортировки",en:"Fix sort button z-index"},{public:true,group:group,trigger:"mapReady",requires:()=>$(".sbgcui_refs-sort-button")});new Feature(reportCUIUpdates,{ru:"Сообщать об обновлениях скрипта",en:"Report script updates"},{public:true,group:group,trigger:"mapReady",unchecked:true});new Feature(moveDestroyNotificationsToTop,{ru:"Переместить оповещения об атаке наверх",en:"Move destroy notifications to top"},{public:true,group:group,trigger:"mapReady",unchecked:()=>{var _a;return!((_a=features.get(loadEUI))===null||_a===void 0?void 0:_a.isEnabled())}});new Feature(enableConsoleDebuggingOfDatabase,{ru:"Включить отладку базы данных в консоли",en:"Enable console debugging of database"},{public:true,group:group,trigger:"cuiTransform",unchecked:true});group="eui";new Feature(centerIconsInGraphicalButtons,{ru:"Центрировать значки графических кнопок",en:"Center icons in graphical buttons"},{public:true,group:group,trigger:"mapReady"});new Feature(showReloadButtonInCompactMode,{ru:"Показать кнопку перезагрузки в компактном режиме",en:"Show reload button in compact mode"},{public:true,group:group,trigger:"mapReady"});new Feature(useTeamColorForButtonsInIngressTheme,{ru:"Использовать цвет команды для кнопок в теме Ingress",en:"Use team color for buttons in Ingress theme"},{public:true,group:group,trigger:"mapReady",unchecked:true});group="animations";new Feature(disableCarouselAnimation,{ru:"Отключить анимацию карусели",en:"Disable carousel animations"},{public:true,group:group,trigger:"pageLoad",requires:()=>window.Splide});new Feature(disablePopupAnimation,{ru:"Отключить анимацию открытия и закрытия окон",en:"Disable open/close windows animation"},{public:true,group:group,trigger:"pageLoad",requires:()=>$(".popup")});new Feature(disableMapAnimation,{ru:"Отключить анимацию карты",en:"Disable map animation"},{public:true,group:group,trigger:"pageLoad"});new Feature(disableAttackButtonAnimation,{ru:"Отключить анимацию кнопки атаки",en:"Disable attack button animation"},{public:true,group:group,trigger:"pageLoad",requires:()=>$("#attack-menu")});new Feature(closeToastsAfter1sec,{ru:"Закрывать всплывающие сообщения через 1 секунду",en:"Close toasts after 1 second"},{public:true,group:group,trigger:"pageLoad",requires:()=>window.Toastify});new Feature(disableAllAnimations,{ru:"Отключить все анимации",en:"Disable all animations"},{public:true,simple:true,group:group,trigger:"pageLoad",parent:{dependency:"all"}});group="toolbar";new Feature(showQuickAutoSelectButton,{ru:"Показать кнопку для быстрого переключения автовыбора коров",en:"Show button for quick change auto-select settings"},{group:group,trigger:"mapReady",requires:()=>$(".sbgcui_toolbar")});new Feature(moveAllSidebarsRight,{ru:"Показывать все боковые панели справа",en:"Move all sidebars to the right"},{group:group,trigger:"mapReady",requires:()=>$(".sbgcui_toolbar-control")});new Feature(hideCUIToolbarToggleButton,{ru:"Скрыть кнопку закрытия панели скрипта Николая",en:"Hide CUI toolbar toggle button"},{public:true,group:group,trigger:"mapReady",requires:()=>$(".sbgcui_toolbar")});group="fire";new Feature(alwaysCenterAlignFireItemsCount,{ru:"Всегда выравнивать количество предметов по центру",en:"Always center align items count"},{group:group,trigger:"fireClick",requires:()=>$("#attack-slider")});new Feature(replaceHighlevelWarningWithIcon,{ru:"Заменить предупреждение про недостаточный уровень на значок поверх предмета",en:"Replace highlevel warning with an icon on top of the item"},{group:group,trigger:"fireClick"});new Feature(joinFireButtons,{ru:"Объединить кнопку атаки и кнопку открытия панели атаки, закрывать панель кликом снаружи",en:"Join attack button and attack panel button, close panel by clicking outside"},{group:group,trigger:"fireClick",requires:()=>$("#attack-menu")});group="inventory";new Feature(increaseItemsFont,{ru:"Увеличить размер шрифта за счёт сокращения названий предметов",en:"Increase font size by shortening item names"},{group:group,trigger:"mapReady",requires:()=>$(".info.popup")});new Feature(showAutoDeleteSettingsButton,{ru:"Показать кнопку перехода к настройкам авто-удаления",en:"Show auto-delete settings button"},{group:group,trigger:"mapReady",requires:()=>$(".inventory.popup")});new Feature(restoreCUISort,{ru:"Заменить сортировку Егора на сортировку Николая",en:"Replace Egor sort with Nicko sort"},{public:true,simple:true,group:group,trigger:"mapReady",unchecked:true,requires:()=>$(".inventory__content")});new Feature(moveReferenceButtonsDown,{ru:"Сдвинуть ниже кнопки направления сортировки и закрытия",en:"Move down sort direction button and close button"},{group:group,trigger:"mapReady",requires:()=>$(".inventory__content")});new Feature(hideManualClearButtons,{ru:"Спрятать кнопки ручного удаления предметов",en:"Hide manual clear buttons"},{group:group,trigger:"mapReady",requires:()=>$(".inventory__content")});new Feature(quickRecycleAllRefs,{ru:"Удалять все имеющиеся рефы от точки при нажатии кнопки удаления",en:"Recycle all existing refs of the point by clicking recycle button"},{group:group,trigger:"mapReady",requires:()=>$(".inventory__content")});new Feature(shrinkRefsListUntilMinimumNeededLength,{ru:"Уменьшать ширину списка рефов до минимально необходимого",en:"Shrink refs list until minimum needed width"},{public:true,group:group,trigger:"mapReady",desktop:true,requires:()=>$(".inventory__content")});group="leaderboard";new Feature(alwaysShowSelfStatistics,{ru:"Всегда показывать собственную статистику",en:"Always show self statistics"},{group:group,trigger:"mapReady",requires:()=>window.__sbg_function_drawLeaderboard,desktop:true});group="info";new Feature(makeInfoPopupSemiTransparent,{ru:"Сделать окно точки полупрозрачным",en:"Make info popup semi-transparent"},{group:group,trigger:"mapReady",requires:()=>$(".info.popup")});new Feature(alwaysShowSecondsForCoolDowns,{ru:"Всегда показывать отсчёт в секундах для кулдауна",en:"Always show seconds for cooldowns"},{group:group,trigger:"mapReady",requires:()=>$("#discover")});new Feature(enlargeCoreSlots,{ru:"Увеличить размер коров",en:"Enlarge core slots"},{group:group,trigger:"mapReady",requires:()=>$(".info.popup")});group="buttons";new Feature(arrangeButtons,{ru:"Привести в порядок кнопки",en:"Arrange buttons"},{group:group,trigger:"mapReady",parent:{dependency:"any"}});new Feature(colorizeTimer,{ru:"Менять цвет таймера в зависимости от количества оставшихся дискаверов",en:"Change color of timer depending on remaining discovers"},{group:group,trigger:"mapReady",requires:()=>$("#discover")});new Feature(replaceSwipeWithButton,{ru:"Показать кнопку для переключения между точками",en:"Show button to swipe between points"},{group:group,trigger:"mapReady",requires:()=>$(".sbgcui_swipe-cards-arrow")});new Feature(hideCloseButton,{ru:"Спрятать кнопку закрытия, закрывать только по нажатию Back",en:"Hide close button, close only by pressing Back"},{group:group,trigger:"mapReady",requires:()=>$(".popup-close, #inventory__close")});new Feature(hideRepairButton,{ru:"Спрятать кнопку зарядки",en:"Hide repair button"},{group:group,trigger:"mapReady",requires:()=>$(".info.popup")});group="draw";new Feature(selectTargetPointByClick,{ru:"Разрешить выбирать конечную точку кликом по ней",en:"Allow select target point by clicking it"},{group:group,trigger:"mapReady",requires:()=>window.__sbg_function_showInfo});new Feature(highlightSelectedTargetPoint,{ru:"Подсвечивать выбранную конечную точку",en:"Highlight selected target point"},{group:group,trigger:"mapReady",requires:()=>window.__sbg_variable_map});new Feature(matchDrawSliderButtons,{ru:"Расположить кнопку рисования ровно под кнопкой карусели рисования",en:"Place draw button exactly under draw carousel button"},{group:group,trigger:"mapReady",requires:()=>$(".draw-slider-wrp")});group="other";new Feature(enableOldWebViewCompatibility,{ru:"Включить совместимость со старыми webview",en:"Enable old web view compatibility"},{public:true,group:group,trigger:"mapReady",unchecked:true,requires:()=>$(".popup.pp-center")});group="tests";new Feature(testNotifications,{ru:"Тестовые нотификации",en:"Test notifications"},{group:group,trigger:"mapReady",unchecked:true});settings.cleanupFeatures();const presetTypes=["allscripts","browser","egorscript","full","nicoscript"];const presets={};function isPreset(preset){return presetTypes.includes(preset)}presets.nicoscript=[...features.groups.base,...features.groups.cui,features.get(loadCUI)];presets.egorscript=[...features.groups.base,...features.groups.eui,features.get(loadEUI)];presets.allscripts=[...presets.nicoscript,...presets.egorscript,features.get(restoreCUISort)];presets.browser=window.innerWidth<800?[...presets.nicoscript,...presets.egorscript]:[...presets.egorscript,features.get(showBuilderPanel),features.get(shrinkRefsListUntilMinimumNeededLength)];presets.full=[];const protectedFeatures={MadMaxNsK:[features.get(joinFireButtons)]};features.inheritAll();console.log("created features");class Layers{constructor(){this.layers=new Map}get(layerName){const layer=this.layers.get(layerName);if(!layer){throw new Error(labels.toasts.noLayer.format({layerName:layerName}).toString())}return layer}set(layerName,layer){this.layers.set(layerName,layer)}has(layerName){return this.layers.has(layerName)}}const layers=new Layers;console.log("created layers");class Script{constructor(data){this.data=data}static async create({src:src,prefix:prefix,transformer:transformer,data:data}){var _a,_b,_c,_d,_e,_f;if(!data){console.log("load script: started");data=await fetch(src).then((async r=>r.text()));console.log("load script: finished")}else{console.log("used build-in script")}const script=new Script(data);console.log(`before: ${(_b=(_a=script.data)===null||_a===void 0?void 0:_a.length)!==null&&_b!==void 0?_b:"0"} bytes`);const originalScriptName=`${prefix}_original`;const modifiedScriptName=`${prefix}_modified`;window[originalScriptName]=(_c=script.data)!==null&&_c!==void 0?_c:"";script.transform(transformer);window[modifiedScriptName]=(_d=script.data)!==null&&_d!==void 0?_d:"";console.log(`after: ${(_f=(_e=script.data)===null||_e===void 0?void 0:_e.length)!==null&&_f!==void 0?_f:"0"} bytes`);return script}static appendScript(src){console.log("append script: started");Script.append((el=>el.src=src));console.log("append script: finished")}static regexEscape(str){return str.replace(/[.\-$^*?+\\/\\|[\]{}()]/g,"\\$&")}static replaceData(data,searchValue,replacer,options){if(typeof data==="undefined"){console.error(`replace ${searchValue.toString()}: data is undefined`);return data}if(searchValue instanceof RegExp?data.match(searchValue):data.includes(searchValue)){if(typeof replacer==="string"){if(options===null||options===void 0?void 0:options.global){data=data.split(searchValue).join(replacer)}else{data=data.replace(searchValue,replacer)}}else{data=data.replace(searchValue,replacer)}}else{console.error(`replace '${searchValue.toString()}': not found`)}return data}static append(fill){const el=document.createElement("script");el.type="text/javascript";fill(el);document.head.appendChild(el)}valueOf(){return this.data}replace(searchValue,replacer){this.data=Script.replaceData(this.data,searchValue,replacer);return this}replaceAll(searchValue,replacement){this.data=Script.replaceData(this.data,searchValue,replacement,{global:true});return this}replaceCUIBlock(block,searchValue,replacer){var _a;const blockSearchValue=new RegExp(`(\\/\\*\\s*${Script.regexEscape(block)}\\s*\\*\\/\n(\\s+)\\{\\s*\n\\s+)([\\s\\S]*?)(\n\\2\\})`);if((_a=this.data)===null||_a===void 0?void 0:_a.match(blockSearchValue)){this.data=this.data.replace(new RegExp(`(\\/\\*\\s*${Script.regexEscape(block)}\\s*\\*\\/\n(\\s+)\\{\\s*\n\\s+)([\\s\\S]*?)(\n\\2\\})`),((_data,open,_,block,close)=>open+Script.replaceData(block,searchValue,replacer)+close))}else{console.error(`replace CUI block '${block}': not found`)}return this}removeCUIBlock(block){return this.replaceCUIBlock(block,/[\s\S]+/,"")}transform(func){console.log(`transform: ${func.name}`);func(this)}expose(prefix,{variables:variables,functions:functions}){if(!this.data){console.error("expose: data is undefined");return this}this.replace(/((?:^|\n)\s*)(const|let)\s+(\w+)(?=[\s+,;\n$])/g,((text,before,variableType,variableName)=>{var _a,_b;if((_a=variables===null||variables===void 0?void 0:variables.readable)===null||_a===void 0?void 0:_a.includes(variableName)){return`${before}window.${prefix}_variable_${variableName} = { get: () => ${variableName} };\n${before}${variableType} ${variableName}`}if((_b=variables===null||variables===void 0?void 0:variables.writable)===null||_b===void 0?void 0:_b.includes(variableName)){return`\n${before}window.${prefix}_variable_${variableName} = {\n\tget: () => ${variableName},\n\tset: (value) => ${variableName} = value\n};\n${before}let ${variableName}`}return text}));this.data=this.data.replace(/(?:^|\n)\s*(async\s+)?function\s+(\w+)\s*\((.*?)\)\s*\{/g,((text,async,functionName,args)=>{var _a,_b,_c;if((_a=functions===null||functions===void 0?void 0:functions.disabled)===null||_a===void 0?void 0:_a.includes(functionName)){return`${text} return;`}if((_b=functions===null||functions===void 0?void 0:functions.readable)===null||_b===void 0?void 0:_b.includes(functionName)){return`\nwindow.${prefix}_function_${functionName} = ${functionName};\n${text}`}if((_c=functions===null||functions===void 0?void 0:functions.writable)===null||_c===void 0?void 0:_c.includes(functionName)){return`\n${text}\n\treturn window.${prefix}_function_${functionName}(...arguments);\n}\nwindow.${prefix}_function_${functionName} = ${async!==null&&async!==void 0?async:""}function(${args!==null&&args!==void 0?args:""}) {`}return text}));return this}embed(){if(!this.data){console.error("embed failed, data is undefined");return}console.log("embed script: started");Script.append((el=>{var _a;return el.textContent=(_a=this.data)!==null&&_a!==void 0?_a:""}));console.log("embed script: finished")}}console.log("created script class");const versionWatcherEventTypes=["init","update"];class VersionWatcher extends EventWatcher{constructor(storageKey,getter){super(versionWatcherEventTypes);this.storageKey=storageKey;this.getter=getter}get(){var _a;return(_a=this.getter())===null||_a===void 0?void 0:_a.get()}watch(){const waitForVersion=setInterval((()=>{var _a;const variable=this.getter();if(!variable){return}const currentVersion=variable.get();if(!currentVersion){return}clearInterval(waitForVersion);this.emit("init",{currentVersion:currentVersion},{});const previousVersion=(_a=localStorage.getItem(this.storageKey))!==null&&_a!==void 0?_a:"";if(previousVersion!==currentVersion){this.emit("update",{previousVersion:previousVersion,currentVersion:currentVersion},{})}localStorage.setItem(this.storageKey,currentVersion)}),50)}}const versionWatchers={native:new VersionWatcher("__sbg_version_native",(()=>window.__sbg_variable_VERSION)),cui:new VersionWatcher("__sbg_version_cui",(()=>window.__sbg_cui_variable_USERSCRIPT_VERSION))};console.log("created version watchers");const localStorageWatcherEventTypes=["getItem","setItem","removeItem"];class LocalStorageWatcher extends EventWatcher{constructor(){super(localStorageWatcherEventTypes)}watch(){(originalMethod=>{localStorage.getItem=key=>{this.emit("getItem",{key:key},{key:key,when:"before"});const result=originalMethod.call(localStorage,key);this.emit("getItem",{key:key},{key:key,when:"after"});return result}})(localStorage.getItem);(originalMethod=>{localStorage.setItem=(key,value)=>{this.emit("setItem",{key:key,value:value},{key:key,when:"before"});originalMethod.call(localStorage,key,value);this.emit("setItem",{key:key,value:value},{key:key,when:"after"})}})(localStorage.setItem);(originalMethod=>{localStorage.removeItem=key=>{this.emit("removeItem",{key:key},{key:key,when:"before"});originalMethod.call(localStorage,key);this.emit("removeItem",{key:key},{key:key,when:"after"})}})(localStorage.removeItem)}isMatchEventOptions(listener,eventOptions){return listener.listenerOptions.key===eventOptions.key&&listener.listenerOptions.when===eventOptions.when}}console.log("created storage watcher");async function main(){var _a;if(location.pathname.startsWith("/login")){return}console.log("started main");preventLoadingScript();enhanceEventListeners();window.__sbg_language=getLanguage();detectLocal();checkEssentialFeatures(features.get(loadCUI),features.get(loadEUI));initFeedback();initUrls();fixPermissionsCompatibility();await waitHTMLLoaded();initCSS();initSettings();(_a=window.__sbg_plus_modifyFeatures)===null||_a===void 0?void 0:_a.call(window,features);execFeatures("pageLoad");window.__sbg_plus_localStorage_watcher=new LocalStorageWatcher;const nativeScript=await getNativeScript();await embedCUI(nativeScript);console.log("wait map: started");await wait((()=>window.__sbg_variable_map));console.log("wait map: finished");initHome();initLayers();execFeatures("mapReady");execFireFeatures();saveUsername();console.log(`finished at ${(new Date).toISOString()}`)}async function copyLogs(){await navigator.clipboard.writeText(logs.join("\n"));showToast(labels.toasts.logs,2e3)}function showToast(label,duration){window.Toastify&&window.Toastify({text:label.toString(),duration:duration,forceDuration:true,gravity:"top",position:"right",className:"interaction-toast"}).showToast()}function isRecord(obj){return typeof obj==="object"&&obj!==null}function isObjectContaining(obj,properties){if(!isRecord(obj)){return false}if(Object.keys(obj).length<Object.keys(properties).length){return false}for(const propertyName in properties){const propertyType=properties[propertyName];if(!(propertyName in obj&&typeof obj[propertyName]===propertyType)){return false}}return true}function jsonSelect(text,keys){const json=JSON.parse(text);let value=json;for(const key of keys){if(!isRecord(value)){throw new Error(`Значение не является объектом (попытка получить ${key} из списка ${keys.join(", ")})`)}if(!(key in value)){throw new Error(`Значение не является объектом (попытка получить ${key} из списка ${keys.join(", ")})`)}value=value[key]}return value}function addLayer(layerName,layerLikeName){const source=new window.ol.source.Vector;const layer=new window.ol.layer.Vector({source:source,className:`ol-layer__${layerName}`});layer.setProperties({name:layerName},true);layer.setProperties({zIndex:layers.get(layerLikeName).getProperties().zIndex},true);window.__sbg_variable_map.get().addLayer(layer);return layer}function preventLoadingScript(){(append=>{Element.prototype.append=function(...nodes){if(nodes.length===0){return}const firstNode=nodes[0];if(typeof firstNode==="object"&&"src"in firstNode&&firstNode.src===getNativeScriptSrc()){return}append.apply(this,nodes)}})(Element.prototype.append);console.log("prevented loading script")}function detectLocal(){if(window.__sbg_local&&window.__sbg_preset!=="full"&&!localStorage.getItem("sbg-plus-disable-local-warning")){alert(labels.toasts.localWarning.toString())}}function checkEssentialFeatures(...features){for(const feature of features){const storageKey=`sbg-plus-feature-disabled-${feature.key}`;if(!feature.isEnabled()&&feature.isEnabled(true)){if(!localStorage.getItem(storageKey)){localStorage.setItem(storageKey,"1");alert(labels.toasts.featureSwitchedOff.format({label:feature.label}).toString())}}else{localStorage.removeItem(storageKey)}}}function getNativeScriptSrc(){return window.__sbg_urls[isMobile()?"script":"intel"].remote}function getCUIScriptSrc(){return window.__sbg_urls.cui.remote}function getEUIScriptSrc(){return window.__sbg_urls.eui.remote}function enhanceEventListeners(){((addEventListener,removeEventListener)=>{function initEventListeners(target,type){var _a,_b;target.__events=(_a=target.__events)!==null&&_a!==void 0?_a:{};target.__events[type]=(_b=target.__events[type])!==null&&_b!==void 0?_b:{listeners:[],sealed:false};return target}EventTarget.prototype.addEventListener=function(type,listener,options){if(!listener){return}const target=initEventListeners(this,type);if(target.__events[type].sealed){return}target.__events[type].listeners.push(listener);addEventListener.call(this,type,listener,options)};EventTarget.prototype.removeEventListener=function(type,listener,options){if(!listener){return}const target=initEventListeners(this,type);const index=target.__events[type].listeners.indexOf(listener);if(index!==-1){target.__events[type].listeners.splice(index,1)}removeEventListener.call(this,type,listener,options)};EventTarget.prototype.getEventListeners=function(type){const target=initEventListeners(this,type);return target.__events[type].listeners};EventTarget.prototype.getEventHandlers=function(type){return this.getEventListeners(type).map((listener=>"handleEvent"in listener?listener.handleEvent:listener)).map((handler=>handler))};EventTarget.prototype.clearEventListeners=function(type,sealed){const target=initEventListeners(this,type);if(sealed){target.__events[type].sealed=true}for(const listener of target.__events[type].listeners){removeEventListener.apply(target,[type,listener])}target.__events[type].listeners.splice(0)};EventTarget.prototype.addOnlyEventListener=function(type,listener,options){if(!listener){return}const target=initEventListeners(this,type);target.clearEventListeners(type,true);target.__events[type].listeners.push(listener);addEventListener.call(this,type,listener,options)};EventTarget.prototype.addRepeatingEventListener=function(type,handler,{repeats:limit,timeout:timeout,tick:tick=(()=>{}),filter:filter=(()=>true),cancel:cancel=(()=>true)}){let repeats=0;this.addEventListener(type,(ev=>{if(!filter(ev)){return}if(!cancel(ev)){repeats=0;return}repeats++;if(repeats>=limit){repeats=0;handler(ev);return}tick(ev,repeats);setTimeout((()=>{repeats=0}),timeout)}))}})(EventTarget.prototype.addEventListener,EventTarget.prototype.removeEventListener);console.log("enhanced event listeners")}function getLanguage(){var _a;let lang;try{lang=jsonSelect((_a=localStorage.getItem("settings"))!==null&&_a!==void 0?_a:"{}",["lang"])}catch{lang=navigator.language}const result=["ru","uk","be","kk"].includes(lang.split("-")[0])?"ru":"en";console.log(`detected language: ${result}`);return result}function initFeedback(){const feedbackClickTimeout=1e3;const feedbackTouches=3;const feedbackTouchRepeats=2;document.addRepeatingEventListener("touchstart",(()=>{void copyLogs()}),{repeats:feedbackTouchRepeats,timeout:feedbackClickTimeout,filter:ev=>ev.touches.length===feedbackTouches&&!window.__sbg_plus_logs_gesture_disabled})}function initUrls(){var _a;const alwaysForced=["eui"];const forcedUrls={desktop:{local:"sbg.plus.user.js",remote:"https://anmiles.net/userscripts/sbg.plus.user.js"},mobile:{local:"sbg.plus.user.min.js",remote:"https://anmiles.net/userscripts/sbg.plus.user.min.js"},intel:{local:"intel.js",remote:"https://sbg-game.ru/app/intel.js"},script:{local:"script.js",remote:"https://sbg-game.ru/app/script.js"},cui:{local:"nicko.js",remote:"https://raw.githubusercontent.com/nicko-v/sbg-cui/main/index.js"},eui:{local:"egor.js",remote:"https://github.com/egorantonov/sbg-enhanced/releases/latest/download/eui.user.js"}};window.__sbg_urls=(_a=window.__sbg_urls)!==null&&_a!==void 0?_a:{};for(const urlType of urlTypes){if(alwaysForced.includes(urlType)||!(urlType in window.__sbg_urls)){window.__sbg_urls[urlType]=forcedUrls[urlType]}}}function fixPermissionsCompatibility(){if(typeof navigator.permissions==="undefined"){Object.defineProperty(navigator,"permissions",{value:{query:()=>({state:"granted"})}})}if(typeof window.DeviceOrientationEvent.requestPermission!=="function"){window.DeviceOrientationEvent.requestPermission=async()=>"granted"}}async function embedCUI(nativeScript){if(!features.get(loadCUI).isEnabled()){console.log("skipped embedCUI; loading native script");nativeScript.embed();return}console.log("embedCUI: started");const cuiScript=await Script.create({src:getCUIScriptSrc(),prefix:"__sbg_cui_script",transformer:transformCUIScript});console.log("embedCUI: wait dbReady");window.addEventListener("dbReady",(()=>{console.log("embedCUI: emit olReady");window.dispatchEvent(new Event("olReady"))}));cuiScript.embed();console.log("embedCUI: wait window.cuiEmbedded");await wait((()=>window.cuiEmbedded));console.log("embedCUI: wait window.ol");await wait((()=>window.ol));console.log("embedCUI: set view animation duration");setViewAnimationDuration();return new Promise((resolve=>{window.addEventListener("mapReady",(()=>{void(async()=>{console.log("embedCUI: wait cuiStatus === loaded");await wait((()=>window.cuiStatus==="loaded"));console.log("embedCUI: finished");console.log(`SBG Custom UI, version ${versionWatchers.cui.get()}`);resolve()})()}))}))}function transformCUIScript(script){script.transform(exposeCUIScript);script.transform(fixCompatibility);script.transform(fixGotoReference);script.transform(fixCUIDefaults);script.transform(fixCUIWarnings);script.transform(fixPointNavigation);features.triggers.cuiTransform.filter(isTransformer).map((transformer=>{transformer.exec(script)}))}async function waitHTMLLoaded(){await resolveOnce((resolver=>{document.addEventListener("DOMContentLoaded",resolver)}),(()=>document.readyState!=="loading"));console.log("loaded DOM content")}async function resolveOnce(addListener,immediateCondition){return new Promise((resolve=>{let resolved=false;function singleResolver(){if(resolved){return}resolved=true;resolve()}addListener(singleResolver);if(immediateCondition()){singleResolver()}}))}async function getNativeScript(){return Script.create({src:getNativeScriptSrc(),prefix:"__sbg_script",transformer:transformNativeScript})}function isMobile(){if("maxTouchPoints"in navigator){return navigator.maxTouchPoints>0}if("msMaxTouchPoints"in navigator){return navigator.msMaxTouchPoints>0}if("orientation"in window){return true}return/\b(BlackBerry|webOS|iPhone|IEMobile|Android|Windows Phone|iPad|iPod)\b/i.test(navigator.userAgent)}function loadCUI(){return}function loadEUI(){window.cuiStatus="loaded";Script.appendScript(getEUIScriptSrc())}function transformNativeScript(script){script.transform(exposeNativeScript);script.transform(includeYMaps);script.transform(exposeAttackSliderData)}function exposeNativeScript(script){script.expose("__sbg",{variables:{readable:["draw_slider","FeatureStyles","is_dark","ItemTypes","LANG","map","TeamColors","temp_lines_source","units","VERSION"],writable:["self_data"]},functions:{readable:["apiQuery","deleteInventoryItem","jquerypassargs","openProfile","takeUnits"],writable:["drawLeaderboard","manageDrawing","movePlayer","showInfo","timeToString"],disabled:!isMobile()&&localStorage.getItem("homeCoords")?["movePlayer"]:undefined}})}function includeYMaps(script){const layerName="ymaps";const isChecked=localStorage.getItem("sbg-plus-state-ymaps")==="1";const ymapsInput=$('<input type="radio" />').attr("name","baselayer").val(layerName).prop("checked",isChecked);const ymapsSpan=$("<span></span>").text(labels.ymaps.toString());const ymapsLabel=$("<label></label>").addClass("layers-config__entry").append(ymapsInput).append(" ").append(ymapsSpan);$('input[value="osm"]').parent().after(ymapsLabel);script.replace("if (type == 'osm') {",`if (type == '${layerName}') { \n  theme = is_dark ? 'dark' : 'light';\n  source = new ol.source.XYZ({ url: \`https://core-renderer-tiles.maps.yandex.net/tiles?l=map&x={x}&y={y}&z={z}&scale=1&projection=web_mercator&theme=\${theme}&lang=\${window.__sbg_language}\` });\n} else if (type == 'osm') {\n`)}function exposeAttackSliderData(script){if(!isMobile()){return}script.replace(/\$\('#catalysers-list'\)\.append\(el\)/g,"if (e.l > self_data.l) el.attr('data-disabled', 1);\n$('#catalysers-list').append(el)")}function setCSS(css){$("<style></style>").html(css).appendTo(document.body)}window.setCSS=setCSS;function initCSS(){setCSS(`\n\t\t\t.topleft-container,\n\t\t\t.bottom-container {\n\t\t\t\tz-index: 1;\n\t\t\t}\n\n\t\t\t.popup > .popup.sbg-plus-settings {\n\t\t\t\tleft: 0;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\ttransform: none;\n\t\t\t\tposition: absolute;\n\t\t\t\tpadding: 0.5em 1em;\n\t\t\t\tcolor: var(--text);\n\t\t\t}\n\n\t\t\t.sbg-plus-settings .settings-content {\n\t\t\t\twidth: 100%;\n\t\t\t\tgap: 0;\n\t\t\t}\n\n\t\t\t.sbg-plus-settings .settings-section h4 {\n\t\t\t\tmargin: 1em 0 0.5em 0;\n\t\t\t\torder: -1;\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t.sbg-plus-settings .settings-section__item.simple ~ h4,\n\t\t\t.sbg-plus-settings.advanced .settings-section__item ~ h4 {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\n\t\t\t.sbg-plus-settings .settings-section__item {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t.sbg-plus-settings .settings-section__item.simple {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t\t.sbg-plus-settings.advanced .settings-section__item {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t\t.sbg-plus-settings .settings-section__item input[type="checkbox"] {\n\t\t\t\tpadding: 0 1em;\n\t\t\t}\n\n\t\t\t.sbg-plus-settings .settings-section__item span {\n\t\t\t\tflex-grow: 1;\n\t\t\t}\n\n\t\t\t.sbg-plus-popup {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tgap: 0.5em;\n\t\t\t}\n\n\t\t\t.sbg-plus-popup:before {\n\t\t\t\t-webkit-backdrop-filter: blur(5px);\n\t\t\t\tbackdrop-filter: blur(5px);\n\t\t\t}\n\n\t\t\t.sbg-plus-popup textarea {\n\t\t\t\tdisplay: block;\n\t\t\t\twidth: 90vw;\n\t\t\t\tmax-width: 800px;\n\t\t\t\theight: 90vh;\n\t\t\t\toverflow: auto;\n\t\t\t\tpadding: 0.5em;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tfont-family: sans-serif;\n\t\t\t}\n\n\t\t\t.sbg-plus-popup li {\n\t\t\t\tpadding: 0.25em 0;\n\t\t\t}\n\n\t\t\t.sbg-plus-popup .buttons {\n\t\t\t\tdisplay: flex;\n\t\t\t\tgap: 0.5em;\n\t\t\t}\n\n\t\t\t.sbg-plus-popup button {\n\t\t\t\twhite-space: nowrap;\n\t\t\t}\n\n\t\t\t.sbg-plus-popup .popup-button-secondary {\n\t\t\t\tfilter: grayscale(0.4);\n\t\t\t}\n\t\t`);console.log("initialized CSS")}async function wait(func){return new Promise((resolve=>{const waitInterval=setInterval((()=>{const result=func();if(!result){return}clearInterval(waitInterval);resolve(result)}),10)}))}function initSettings(){new SettingsPopup;console.log("initialized settings")}function createPopup(cssClass,options={roundClose:true}){var _a;const closeButton=$("<button></button>").addClass(options.roundClose?"popup-close":"popup-button-secondary").attr("data-round",options.roundClose?"true":null).html(options.roundClose?"&nbsp;✕&nbsp;":labels.close.toString());const buttonsBlock=$("<div></div>").addClass("buttons").append(closeButton);const popup=$("<div></div>").addClass(`${cssClass} sbg-plus-popup popup pp-center hidden`).append(buttonsBlock).appendTo("body");(_a=closeButton.get(0))===null||_a===void 0?void 0:_a.addOnlyEventListener("click",(function(){popup.addClass("hidden")}));return popup}function initHome(){if(isMobile()){return}const homeCoords=localStorage.getItem("homeCoords");if(!homeCoords){return}const center=JSON.parse(homeCoords);window.__sbg_variable_map.get().getView().setCenter(center);console.log("initialized home location")}function initLayers(){for(const layer of window.__sbg_variable_map.get().getAllLayers()){const layerName=layer.getProperties().name;const key=!layerName?"base":layerName==="lines"&&layers.has("lines")?"lines_temp":layerName;layers.set(key,layer)}console.log("initialized layers")}function execFeatures(trigger){features.triggers[trigger].map((feature=>{if(feature instanceof Feature){feature.exec(undefined)}}));console.log(`executed all features on ${trigger}`)}function execFireFeatures(){let fireClicked=false;$("#attack-menu").on("click",(()=>{if(!fireClicked){fireClicked=true;execFeatures("fireClick")}}))}function saveUsername(){localStorage.setItem("sbg-plus-last-username",window.__sbg_variable_self_data.get().n)}function exposeCUIScript(script){script.expose("__sbg_cui",{variables:{readable:["USERSCRIPT_VERSION","config","database"]},functions:{readable:[],writable:["createToast","getNotifs"]}})}function fixCompatibility(script){script.replace("fetch('/app/script.js')","(async () => ({ text: async () => window.__sbg_script_modified }))()").replace("window.stop","false && window.stop").replace("window.navigator.geolocation.clearWatch","false && window.navigator.geolocation.clearWatch").replace("document.open","false && document.open").replace("fetch('/app')","false && fetch('/app')").replace(/$/,"window.cuiEmbedded = true").replace(/\} catch.*\n.*SBG CUI: Ошибка в main/,(match=>`window.cuiStatus = 'loaded';${match}`)).replace(/window\.onerror = (.*);/,((_match,func)=>`window.__sbg_onerror_handlers.push(${func});`)).expose("__sbg_cui",{functions:{readable:["olInjection","loadMainScript","main"]}})}function setViewAnimationDuration(){if(typeof window.__sbg_plus_animation_duration==="number"){(animate=>{window.ol.View.prototype.animate=function(...args){const instantArgs=args.map((arg=>typeof arg==="object"?{...arg,duration:window.__sbg_plus_animation_duration}:arg));animate.call(this,...instantArgs)}})(window.ol.View.prototype.animate)}}function fixGotoReference(script){$(document).on("click",'a[href*="point="]',(ev=>{var _a;const guid=(_a=ev.currentTarget.href.split("point=").pop())===null||_a===void 0?void 0:_a.split("&").shift();window.__sbg_function_showInfo(guid);ev.stopPropagation();return false}));script.replace("window.location.href = `/app/?point=${guid}`","window.__sbg_function_showInfo(guid)")}function fixCUIDefaults(script){script.replace("sepia: 1","sepia: 0")}function fixCUIWarnings(script){script.replace("!viewportMeta.content.match(yaRegexp)",'!viewportMeta.content.match(yaRegexp) && navigator.userAgent.toLowerCase().includes("yabrowser")')}function fixPointNavigation(script){const obj="__sbg_share";const func="open";if(!(obj in window)||!(func in window[obj])){return}script.replaceCUIBlock("Навигация и переход к точке","window.location.href = url",`if (window['${obj}']['${func}'](url) === false) {\n\t\t\t\t\tnavigator.clipboard.writeText(lastOpenedPoint.coords);\n\t\t\t\t\tcreateToast('${labels.toasts.noGeoApp.toString()}', 'top left', 3000).showToast();\n\t\t\t\t}`)}function enableConsoleDebuggingOfDatabase(script){script.replace(/const openRequest = .*/,(line=>["console.log(`IDB: before open","`);",line,"console.log(`IDB: after open","`);"].join(" "))).replace(/openRequest\.addEventListener\('(.*?)', event => \{/,((line,eventName)=>[line,"console.log(`IDB: openRequest",`event=${eventName}`,"`);"].join(" "))).replace(/database\.addEventListener\('(.*?)', event => \{/,((line,eventName)=>[line,"console.log(`IDB: database",`event=${eventName}`,"`);"].join(" "))).replace(/function initializeDB.*/,(line=>[line,"console.log(`IDB: initializeDB","`);"].join(" "))).replace(/function updateDB.*/,(line=>[line,"console.log(`IDB: updateDB","oldVersion=` + oldVersion + `","newVersion=` + newVersion + `","`);"].join(" "))).replace(/\{ (updateToVersion.*?) \}/,((_line,code)=>["{","console.log(`IDB: updateToVersion started","v=` + v + `","`);",code,"console.log(`IDB: updateToVersion finished","v=` + v + `","`);","}"].join(" "))).replace(/database = event.target.result;/,(line=>["console.log(`IDB: upgradeneeded","oldVersion=` + oldVersion + `","newVersion=` + newVersion + `","`);",line].join(" "))).replace("transaction.addEventListener('complete', () => { window.dispatchEvent(new Event('dbReady')); });","transaction.addEventListener('complete', () => { console.log(`IDB: transaction completed`); window.dispatchEvent(new Event('dbReady')); });").replace(/const transaction = database\.transaction\((.*?)\);/,((line,code)=>["console.log(`IDB: transaction",`args=${JSON.stringify(code)}`,"`);",line,...["complete","error","success","abort"].map((eventName=>[`transaction.addEventListener('${eventName}', (...args) => {`,"console.log(`IDB: transaction",`event=${eventName}`,"args=` + JSON.stringify(args) + `","`);","});"])).flat()].join(" "))).replace(/function getData\(event\) \{/,(line=>[line,"console.log(`IDB: getData","storeName=` + event.target.source.name + `","result=` + JSON.stringify(event.target.result) + `","`);"].join(" "))).replace(/if \(cursor != undefined\) \{/,(line=>[line,"console.log(`IDB: objectToPopulate","cursor=` + JSON.stringify(cursor) + `","hasKey=` + ('key' in cursor) + `","`);"].join(" "))).replace(/window.dispatchEvent\(new Event\('(.*?)'\)\)/,((line,eventName)=>["console.log(`IDB: dispatch",`event=${eventName}`,"`);",line].join(" ")))}function disableClusters(script){script.replace("function mapClickHandler(event) {","function mapClickHandler(event) { event.isSilent = true;")}function disableAttackZoom(script){setCSS(`\n\t\t\t.sbgcui_lock_rotation[sbgcui_locked="true"]::before {\n\t\t\t\ttransition: none !important;\n\t\t\t}\n\t\t`);script.replace("fitBlastRange(isCompleted) {","fitBlastRange(isCompleted) { isCompleted = true;")}function unlockCompassWhenRotateMap(script){script.replaceCUIBlock("Вращение карты","if (latestTouchPoint == null) { return; }","if (latestTouchPoint == null) { if (isRotationLocked) { toggleRotationLock(event); touchStartHandler({...event, target: event.target, touches: [event.touches[0]], targetTouches: [event.targetTouches[0]] }); } return; }")}function disableCarouselAnimation(splide){(splide.defaults||(splide.defaults={})).speed=0}function disablePopupAnimation(){setCSS(`\n\t\t\t.popup {\n\t\t\t\ttransition: none !important;\n\t\t\t}\n\t\t`)}function disableMapAnimation(){window.__sbg_plus_animation_duration=0}function disableAttackButtonAnimation(){setCSS(`\n\t\t\t#attack-menu,\n\t\t\t#attack-menu:after {\n\t\t\t\ttransition: none !important;\n\t\t\t}\n\t\t`)}function closeToastsAfter1sec(toastify){(_init=>{toastify.prototype.init=function(options){if(!options.forceDuration){if(!options.duration){options.duration=0}else{if(options.duration>0&&options.duration<=3e3){options.duration=Math.min(options.duration,1e3)}}}_init.call(this,options);return this};toastify.prototype.init.prototype=_init.prototype})(toastify.prototype.init)}function disableAllAnimations(){return}function enableBackButton(){const backClickTimeout=1e3;const popups=[{hiddenClass:"hidden",selectors:[".popup",".draw-slider-wrp",".attack-slider-wrp"]},{hiddenClass:"sbgcui_hidden",selectors:[".sbgcui_settings"]}];function isPopupClosed(){let isClosed=false;for(const{hiddenClass:hiddenClass,selectors:selectors}of popups){for(const selector of selectors){for(const el of $(selector).toArray()){if(!el.classList.contains(hiddenClass)){el.classList.add(hiddenClass);if(selector===".draw-slider-wrp"){$("#draw-slider-close").trigger("click")}if(selector===".attack-slider-wrp"){$("#attack-menu").removeClass("sbgcui_attack-menu-rotate")}isClosed=true}}}}return isClosed}document.addRepeatingEventListener("backbutton",(()=>{location.replace("/window.close")}),{repeats:2,timeout:backClickTimeout,tick:()=>{showToast(labels.toasts.back,backClickTimeout)},cancel:()=>!isPopupClosed()})}function showBuilderPanel(){void(async()=>{const buttonsSection=await wait((()=>$(".topleft-container")));new Builder(buttonsSection)})()}function showFeatureToggles(){const containers={info:$(".info.popup .i-image-box"),inventory:$(".inventory.popup")};Object.values(containers).forEach((container=>$("<div></div>").addClass("i-buttons i-feature-toggles").appendTo(container)));const featureToggles=[{container:"info",title:"ARR",feature:features.get(arrangeButtons)},{container:"info",title:"CLS",feature:features.get(hideCloseButton)},{container:"info",title:"REP",feature:features.get(hideRepairButton)},{container:"info",title:"TMR",feature:features.get(colorizeTimer)},{container:"info",title:"SWP",feature:features.get(replaceSwipeWithButton)},{container:"inventory",title:"CUI",feature:features.get(restoreCUISort)},{container:"inventory",title:"BUT",feature:features.get(moveReferenceButtonsDown)},{container:"inventory",title:"CLR",feature:features.get(hideManualClearButtons)}];for(const{container:container,title:title,feature:feature}of featureToggles){const button=$("<button></button>").html(title).toggleClass("off",!feature.isEnabled()).appendTo(containers[container].find(".i-buttons"));button.on("click",(()=>{const toggleValue=feature.toggle();button.toggleClass("off",!toggleValue)}))}setCSS(`\n\t\t\t.i-feature-toggles {\n\t\t\t\tposition: absolute !important;\n\t\t\t\tleft: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tjustify-content: flex-start;\n\t\t\t\tdirection: ltr;\n\t\t\t}\n\n\t\t\t.i-feature-toggles button {\n\t\t\t\twidth: auto;\n\t\t\t\tposition: relative;\n\t\t\t\tz-index: 1;\n\t\t\t\tfont-size: 0.85em;\n\t\t\t\tmin-height: 0px;\n\t\t\t\tline-height: 1;\n\t\t\t}\n\n\t\t\t.i-feature-toggles button.off {\n\t\t\t\tfilter: saturate(0.15);\n\t\t\t}\n\t\t`)}function updateLangCacheAutomatically(){versionWatchers.native.on("update",(({currentVersion:currentVersion})=>{console.log(`update lang cache to match ${currentVersion} version`);$("#lang-cache").trigger("click")}),{previous:true})}function fixBlurryBackground(){setCSS(`\n\t\t\t.popup.pp-center {\n\t\t\t\tbackdrop-filter: none;\n\t\t\t\t-webkit-backdrop-filter: none;\n\t\t\t}\n\n\t\t\t.popup.pp-center:before {\n\t\t\t\tcontent: '';\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\t-webkit-backdrop-filter: blur(5px);\n\t\t\t\tbackdrop-filter: blur(5px);\n\t\t\t\tz-index: -1;\n\t\t\t}\n\t\t`)}function alignSettingsButtonsVertically(){setCSS(`\n\t\t\t.settings-section__button {\n\t\t\t\tjustify-self: unset !important;\n\t\t\t}\n\n\t\t\t.settings-section__item {\n\t\t\t\tgrid-template-columns: 5fr 3fr;\n\t\t\t}\n\n\t\t\t.settings-section__item select {\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t`)}function fixCompass(){const handlers=[...window.getEventHandlers("deviceorientation")];function triggerHandlers(webkitCompassHeading){handlers.map((handler=>{handler({webkitCompassHeading:webkitCompassHeading})}))}function deviceOrientationAbsoluteListener(ev){if(!ev.absolute||ev.alpha==null||ev.beta==null||ev.gamma==null){return}const totalDegrees=360;const webkitCompassHeading=-(ev.alpha+ev.beta*ev.gamma/90)%totalDegrees;window.removeEventListener("deviceorientation",deviceOrientationListener);triggerHandlers(webkitCompassHeading)}const deviceOrientationListener=ev=>{const{webkitCompassHeading:webkitCompassHeading}=ev;if(webkitCompassHeading!==null&&!isNaN(webkitCompassHeading)){triggerHandlers(webkitCompassHeading);window.removeEventListener("deviceorientationabsolute",deviceOrientationAbsoluteListener)}};function addListeners(){window.addEventListener("deviceorientationabsolute",deviceOrientationAbsoluteListener);window.addEventListener("deviceorientation",deviceOrientationListener)}void(async()=>{const response=await window.DeviceOrientationEvent.requestPermission();if(response==="granted"){addListeners()}else{console.warn("DeviceOrientationEvent permission is not granted")}})()}function showLevelUpCongratulations(){const storageKey="lastUserLevel";const selfData=window.__sbg_variable_self_data.get();if(!localStorage.getItem(storageKey)){localStorage.setItem(storageKey,selfData.l.toString())}const congratulation=$(`\n\t\t\t<h3>New access</h3>\n\t\t\t<p>Level <span class="value"></span></p>\n\t\t\t<p>🎉</p>\n\t\t`);const overlay=$("<div></div>").addClass("levelup-overlay").appendTo("body");const popup=$("<div></div>").addClass("levelup").append(congratulation).appendTo(overlay);const showPopup=()=>{popup.find(".value").text(localStorage.getItem(storageKey));overlay.show();setTimeout((()=>{overlay.addClass("active")}),1);setTimeout((()=>{overlay.on("click.close",(()=>{overlay.removeClass("active").off("click.close").hide()}))}),1e3)};const checkPopup=newValue=>{if(newValue.toString()!==localStorage.getItem(storageKey)){localStorage.setItem(storageKey,newValue.toString());showPopup()}};document.querySelector("#self-info__explv").addRepeatingEventListener("click",(()=>{showPopup()}),{repeats:3,timeout:1e3});window.__sbg_variable_self_data.set(new Proxy(selfData,{set:(target,property,newValue)=>{target[property]=newValue;if(property==="l"){checkPopup(Number(newValue))}return true}}));checkPopup(selfData.l);setCSS(`\n\t\t\t.levelup-overlay {\n\t\t\t\tdisplay: none;\n\t\t\t\tposition: fixed;\n\t\t\t\tleft: 0;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tz-index: 65534;\n\t\t\t\tbackground: rgba(0, 0, 0, 0.8);\n\t\t\t\topacity: 0;\n\t\t\t}\n\n\t\t\t.levelup-overlay.active {\n\t\t\t\topacity: 1;\n\t\t\t\ttransition: 1s opacity;\n\t\t\t}\n\n\t\t\t.levelup {\n\t\t\t\twidth: calc(100% - 120px);\n\t\t\t\tborder: 2px solid #fdba3e !important;\n\t\t\t\tbackground-color: hsl(41deg 54% 7%);\n\t\t\t\tpadding: 20px 0 !important;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\ttext-align: center;\n\t\t\t\tposition: absolute;\n\t\t\t\tz-index: 65535;\n\t\t\t\ttop: 50%;\n\t\t\t\tleft: 50%;\n\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t}\n\n\t\t\t.levelup h3 {\n\t\t\t\tmargin: 0;\n\t\t\t\tcolor: #fed647;\n\t\t\t}\n\n\t\t\t.levelup p {\n\t\t\t\tfont-size: 14vw;\n\t\t\t\tcolor: #feebb4;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\t#self-info__explv {\n\t\t\t\tpointer-events: auto;\n\t\t\t}\n\t\t`)}function hideInventoryLimit(){setCSS(`\n\t\t\t#self-info__inv:after {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`)}function disableCopyingLogsWithThreeFingers(){window.__sbg_plus_logs_gesture_disabled=true}function centerIconsInGraphicalButtons(){setCSS(`\n\t\t\t.material-symbols-outlined {\n\t\t\t\tline-height: 1 !important;\n\t\t\t}\n\t\t`)}function showReloadButtonInCompactMode(){setCSS(`\n\t\t\t.game-menu button.fa-solid-rotate:first-child:last-child {\n\t\t\t\theight: 2em;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0.75em;\n\t\t\t\tright: 0.75em;\n\t\t\t}\n\t\t`)}function useTeamColorForButtonsInIngressTheme(){setCSS(`\n\t\t\t:root {\n\t\t\t\t--ingress-btn-color: var(--sbgcui-branding-color);\n\t\t\t\t--ingress-btn-border-color: var(--sbgcui-branding-color);\n\t\t\t\t--ingress-btn-bg-color: var(--ol-background-color);\n\t\t\t\t--ingress-btn-glow-color: transparent;\n\n\t\t\t\t--ingress-btn-hl-color: var(--sbgcui-branding-color);\n\t\t\t\t--ingress-btn-hl-border-color: var(--sbgcui-branding-color);\n\t\t\t\t--ingress-btn-hl-bg-color: var(--ol-background-color);\n\t\t\t\t--ingress-btn-hl-glow-color: transparent;\n\t\t\t}\n\n\t\t\t.ol-control button {\n\t\t\t\tbox-shadow: none !important;\n\t\t\t\tborder: none !important;\n\t\t\t}\n\t\t`)}function alwaysCenterAlignFireItemsCount(){setCSS(`\n\t\t.splide__slide[data-rarity] .catalysers-list__amount {\n\t\t\tdisplay: block !important;\n\t\t}\n\t\t.splide__slide[data-rarity] .catalysers-list__amount:before {\n\t\t\tcontent: '';\n\t\t\tdisplay: inline-block;\n\t\t\tbackground: currentColor;\n\t\t\twidth: 1em;\n\t\t\theight: 1em;\n\t\t\tposition: absolute;\n\t\t\tright: 8px;\n\t\t\tfont-size: 0.85em;\n\t\t\tbottom: 5px;\n\t\t}\n\t\t`)}function replaceHighlevelWarningWithIcon(){setCSS(`\n\t\t\t#attack-slider {\n\t\t\t\tpadding: 4px 0;\n\t\t\t}\n\n\t\t\t.attack-slider-highlevel {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t#catalysers-list > .splide__slide[data-disabled]:after {\n\t\t\t\tdisplay: block;\n\t\t\t\tcontent: "";\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tbackground: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle r="47" cx="50" cy="50" fill="none" stroke="red" stroke-width="6"></circle><line x1="15" y1="15" x2="85" y2="85" stroke="red" stroke-width="6"></line></svg>') center center no-repeat;\n\t\t\t}\n\t\t`)}function joinFireButtons(attackMenu){const menuHeight=attackMenu.outerHeight();setCSS(`\n\t\t\t.attack-slider-wrp {\n\t\t\t\ttransition: none;\n\t\t\t\tposition: relative;\n\t\t\t\tz-index: 3;\n\t\t\t}\n\n\t\t\t.attack-slider-buttons {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 100%;\n\t\t\t\tleft: 50%;\n\t\t\t\tpadding: 0;\n\t\t\t}\n\n\t\t\t#attack-slider-fire {\n\t\t\t\tmax-width: ${menuHeight}px;\n\t\t\t\theight: ${menuHeight}px;\n\t\t\t\topacity: 0;\n\t\t\t\tposition: relative;\n\t\t\t\tleft: -50%;\n\t\t\t}\n\n\t\t\t#attack-menu {\n\t\t\t\topacity: 0.7;\n\t\t\t}\n\n\t\t\t#attack-menu.sbgcui_attack-menu-rotate {\n\t\t\t\tborder-color: var(--sbgcui-branding-color) !important;\n\t\t\t\twidth: 80px !important;\n\t\t\t\theight: 80px !important;\n\t\t\t\topacity: 1;\n\t\t\t}\n\n\t\t\t#attack-menu.sbgcui_attack-menu-rotate::after {\n\t\t\t\tbackground: var(--sbgcui-branding-color) !important;\n\t\t\t}\n\t\t`);$(window).on("click",(function(ev){const target=ev.target;if(target.id!=="attack-menu"&&$(".attack-slider-wrp.hidden").length===0&&$(target).parents(".attack-slider-wrp").length===0){$("#attack-menu").trigger("click")}}))}function showQuickAutoSelectButton(toolbar){const autoSelect=window.__sbg_cui_variable_config.get().autoSelect;const cssClass=autoSelect.deploy==="max"?"fa-rotate-180":"";const autoSelectButton=$("<button></button>").addClass("fa fa-solid-arrow-down-short-wide").addClass(cssClass).prependTo(toolbar);autoSelectButton.on("click",(()=>{autoSelectButton.toggleClass("fa-rotate-180");const isMax=autoSelectButton.hasClass("fa-rotate-180");$('select[name="autoSelect_deploy"]').val(isMax?"max":"min");$('select[name="autoSelect_upgrade"]').val(isMax?"max":"min");$('form.sbgcui_settings button:contains("Сохранить")').trigger("click")}));setCSS(`\n\t\t\t.fa-rotate-180 {\n\t\t\t\ttransform: scale(-1, 1);\n\t\t\t}\n\t\t`)}function moveAllSidebarsRight(control){$(".ol-control").first().addClass("toolbar").prepend(control.children());setCSS(`\n\t\t\t.ol-control.toolbar {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t}\n\n\t\t\t.ol-control.toolbar #settings {\n\t\t\t\torder: 99;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\n\t\t\t.sbgcui_toolbar {\n\t\t\t\tgap: 0;\n\t\t\t}\n\n\t\t\t.sbgcui_toolbar + button {\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\n\t\t\t#toggle-follow {\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\n\t\t\t.sbgcui_lock_rotation {\n\t\t\t\tmargin-top: 10px !important;\n\t\t\t}\n\t\t`)}function hideCUIToolbarToggleButton(){setCSS(`\n\t\t\t.sbgcui_toolbar {\n\t\t\t\tdisplay: flex !important;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\n\t\t\t.sbgcui_toolbar + button {\n\t\t\t\tdisplay: none !important;\n\t\t\t}\n\t\t`)}function showAutoDeleteSettingsButton(inventoryPopup){$("<button></button>").text("Auto-delete").css({height:"40px"}).appendTo(inventoryPopup).on("click",(()=>{$("#inventory__close").trigger("click");$(".sbgcui_settings").removeClass("sbgcui_hidden");$('.sbgcui_settings-title:contains("Автоудаление")').trigger("click")}))}function moveReferenceButtonsDown(){setCSS(`\n\t\t\t[data-feat-moveReferenceButtonsDown] .inventory__controls {\n\t\t\t\theight: 0;\n\t\t\t\tmin-height: 0;\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\n\t\t\t[data-feat-moveReferenceButtonsDown] .inventory__content[data-tab="3"] ~ .inventory__controls > select {\n\t\t\t\tposition: fixed;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 51px;\n\t\t\t\theight: 40px;\n\t\t\t\tflex-grow: 0;\n\t\t\t\tflex-shrink: 0;\n\t\t\t\tmargin: 0 4px;\n\t\t\t\twidth: calc(100% - 8px);\n\t\t\t\ttext-align: center;\n\t\t\t}\n\n\t\t\t[data-feat-moveReferenceButtonsDown] .inventory__content[data-tab="3"] ~ .inventory__controls > .sbgcui_refs-sort-button {\n\t\t\t\tborder-width: revert;\n\t\t\t\tborder-radius: 0;\n\t\t\t\tbottom: 51px;\n\t\t\t\tz-index: 2;\n\t\t\t\tright: 4px;\n\t\t\t\theight: 40px;\n\t\t\t\twidth: 40px;\n\t\t\t\tfont-size: 20px;\n\t\t\t}\n\n\t\t\t[data-feat-moveReferenceButtonsDown] #inventory__close {\n\t\t\t\tbottom: 102px;\n\t\t\t}\n\n\t\t\t[data-feat-moveReferenceButtonsDown] .inventory__content[data-tab="3"] {\n\t\t\t\tmargin-bottom: 41px;\n\t\t\t}\n\t\t`)}function hideManualClearButtons(){setCSS(`\n\t\t\t[data-feat-hideManualClearButtons] .inventory__controls {\n\t\t\t\theight: 0;\n\t\t\t\tmin-height: 0;\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\n\t\t\t[data-feat-hideManualClearButtons] .inventory__content[data-tab="3"] ~ .inventory__controls > select {\n\t\t\t\tposition: fixed;\n\t\t\t\tright: 0;\n\t\t\t\tbottom: 51px;\n\t\t\t\theight: 40px;\n\t\t\t\tflex-grow: 0;\n\t\t\t\tflex-shrink: 0;\n\t\t\t\tmargin: 0 4px;\n\t\t\t\twidth: calc(100% - 8px);\n\t\t\t\ttext-align: center;\n\t\t\t}\n\n\t\t\t[data-feat-hideManualClearButtons] .inventory__content[data-tab="3"] ~ .inventory__controls > .sbgcui_refs-sort-button {\n\t\t\t\tborder-width: revert;\n\t\t\t\tborder-radius: 0;\n\t\t\t\tbottom: 51px;\n\t\t\t\tz-index: 2;\n\t\t\t\tright: 4px;\n\t\t\t\theight: 40px;\n\t\t\t\twidth: 40px;\n\t\t\t\tfont-size: 20px;\n\t\t\t}\n\n\t\t\t[data-feat-hideManualClearButtons] #inventory__close {\n\t\t\t\tbottom: 102px;\n\t\t\t}\n\n\t\t\t[data-feat-hideManualClearButtons] .inventory__content[data-tab="3"] {\n\t\t\t\tmargin-bottom: 41px;\n\t\t\t}\n\t\t`)}function alwaysShowSelfStatistics(drawLeaderboard){window.__sbg_function_drawLeaderboard=async function(){var _a,_b,_c;await drawLeaderboard();const statMap={owned:"owned_points"};const stat=(_b=(_a=$("#leaderboard__term-select").val())===null||_a===void 0?void 0:_a.toString())!==null&&_b!==void 0?_b:"";const data=(await window.__sbg_function_apiQuery("profile",{guid:String($("#self-info__name").data("guid"))})).response.data;const value=data[(_c=statMap[stat])!==null&&_c!==void 0?_c:stat];const entry=window.__sbg_function_jquerypassargs($("<li>"),"$1$ — $2$; $3$ $4$",$("<span>",{class:"profile-link"}).text(data.name).css("color",`var(--team-${data.team})`).attr("data-name",data.name).on("click",(el=>void window.__sbg_function_openProfile(el))),$("<span>").text(window.i18next.t("leaderboard.level",{count:data.level})).css("color",`var(--level-${data.level})`),...window.__sbg_function_takeUnits(value!==null&&value!==void 0?value:0));const list=$("<ol>").addClass("leaderboard__list_self").attr("start",$("#leaderboard__place-pos").text()).append(entry);$(".leaderboard__list_self").remove();$(".leaderboard__list").after(list)};setCSS(`\n\t\t\t.leaderboard__list_self {\n\t\t\t\tflex-shrink: 0;\n\t\t\t\tborder-top: 1px solid white;\n\t\t\t\tmargin: 0;\n\t\t\t\toverflow-y: auto;\n\t\t\t\tpadding-left: 3em;\n\t\t\t}\n\t\t`)}function restoreCUISort(){setCSS(`\n\t\t\t[data-feat-restoreCUISort] .inventory__content[data-tab="3"] ~ .inventory__controls > #eui-sort {\n\t\t\t\tdisplay: none !important;\n\t\t\t}\n\n\t\t\t[data-feat-restoreCUISort] .inventory__content[data-tab="3"] ~ .inventory__controls > .sbgcui_refs-sort-button,\n\t\t\t[data-feat-restoreCUISort] .inventory__content[data-tab="3"] ~ .inventory__controls > .sbgcui_refs-sort-select {\n\t\t\t\tdisplay: block !important;\n\t\t\t}\n\t\t`)}function fixSortButton(_button){setCSS(`\n\t\t\t.sbgcui_refs-sort-button {\n\t\t\t\tz-index: 100 !important;\n\t\t\t}\n\t\t`)}function reportCUIUpdates(){versionWatchers.cui.on("update",(({currentVersion:currentVersion})=>{const message=labels.toasts.cuiUpdated.format({currentVersion:currentVersion});showToast(message,2e3);if(window.__sbg_local){alert(message)}}),{previous:true})}function moveDestroyNotificationsToTop(){(createToast=>{window.__sbg_cui_function_createToast=function(content,position,duration,className,oldestFirst){if(className==="sbgcui_destroy_notif_toast"){position="top left"}return createToast(content,position,duration,className,oldestFirst)}})(window.__sbg_cui_function_createToast);setCSS(`\n\t\t\t.sbgcui_destroy_notifs>.toastify:nth-child(1) {\n\t\t\t\ttranslate: 0 calc(2em - 5px);\n\t\t\t}\n\n\t\t\t.sbgcui_destroy_notifs>.toastify:nth-child(2) {\n\t\t\t\ttranslate: 0 calc(2em - 10px);\n\t\t\t}\n\n\t\t\t.sbgcui_destroy_notifs>.toastify:nth-child(3) {\n\t\t\t\ttranslate: 0 calc(2em - 15px);\n\t\t\t}\n\n\t\t\t.sbgcui_destroy_notifs {\n\t\t\t\tbottom: auto;\n\t\t\t\ttop: 5px;\n\t\t\t}\n\t\t`)}function quickRecycleAllRefs(inventoryContent){setCSS(`\n\t\t\t.inventory__content[data-tab="3"] .inventory__item {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: row;\n\t\t\t}\n\n\t\t\t.inventory__content[data-tab="3"] .inventory__item-left {\n\t\t\t\torder: 0;\n\t\t\t}\n\n\t\t\t.inventory__content[data-tab="3"] .inventory__item-controls {\n\t\t\t\tflex-direction: row;\n\t\t\t}\n\n\t\t\t.inventory__content[data-tab="3"] .inventory__item-controls button {\n\t\t\t\twidth: 30px;\n\t\t\t\tmargin-left: 4px;\n\t\t\t}\n\n\t\t\t.inventory.popup .inventory__manage-amount[data-tab="3"] {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`);const inventoryContentEl=inventoryContent.get(0);inventoryContentEl.getEventListeners("click").forEach((listener=>{inventoryContentEl.removeEventListener("click",listener)}));$(document).on("click",".inventory__content",(function(ev){var _a;if(!ev.target){return}if(!$(ev.target).is(".inventory__ic-manage")){if($(ev.target).is(".inventory__ic-view")){ev.offsetX=0}inventoryContentEl.getEventHandlers("click").map((func=>{ev.originalEvent&&func(ev.originalEvent)}));return}const el=$(ev.target).parents(".inventory__item");const inventory=JSON.parse((_a=localStorage.getItem("inventory-cache"))!==null&&_a!==void 0?_a:"[]")||[];const item=inventory.find((item=>item.g==el.attr("data-guid")));if(!item){return}const fakeEl=$("<input />").addClass("inventory__ma-amount").val(item.a).css({display:"none"});Object.defineProperty(fakeEl.get(0),"reportValidity",{value:()=>true});el.append(fakeEl);el.attr("data-tab",item.t);void window.__sbg_function_deleteInventoryItem(el)}))}function shrinkRefsListUntilMinimumNeededLength(){setCSS(`\n\t\t\t.inventory__content[data-tab="3"] {\n\t\t\t\talign-self: flex-start;\n\t\t\t}\n\t\t`)}function makeInfoPopupSemiTransparent(){setCSS(`\n\t\t\t.info.popup {\n\t\t\t\tbackground-color: transparent;\n\t\t\t}\n\t\t`)}function alwaysShowSecondsForCoolDowns(){const cooldownSeconds=90;const visibleSeconds=100;const visibleSecondsPrevious=60;window.__sbg_function_timeToString=function(seconds){return seconds>=visibleSeconds?window.i18next.t("units.min",{count:Math.floor(seconds/60)}):window.i18next.t("units.sec",{count:seconds})};setCSS(`\n\t\t\t#discover[data-remain] .discover-progress {\n\t\t\t\ttransform: scale(${visibleSecondsPrevious/cooldownSeconds}, 1);\n\t\t\t\ttransform-origin: left;\n\t\t\t}\n\t\t`)}function increaseItemsFont(){setCSS(`\n\t\t\t.inventory__content:not([data-tab="3"]) {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t\tcounter-reset: section;\n\t\t\t}\n\n\t\t\t.inventory__content:not([data-tab="3"]) .inventory__item {\n\t\t\t\theight: calc((100% - 120px) / 5);\n\t\t\t\twidth: 50%;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\t.inventory__content:not([data-tab="3"]) .inventory__item-title {\n\t\t\t\theight: 2em;\n\t\t\t\tmargin-top: 0.8em;\n\t\t\t\tfont-size: 2em;\n\t\t\t}\n\n\t\t\t.inventory__content:not([data-tab="3"]) .inventory__item-descr {\n\t\t\t\tmargin-left: 0;\n\t\t\t\tmargin-top: -0.8em;\n\t\t\t\tfont-size: 1.3em !important;\n\t\t\t}\n\n\t\t\t.inventory__content:not([data-tab="3"]) .inventory__item-descr::first-letter {\n\t\t\t\tfont-size: 0;\n\t\t\t}\n\t\t`);const itemTypes=window.__sbg_variable_ItemTypes.get();itemTypes[1]="R";itemTypes[2]="X";itemTypes[3]="K";itemTypes[4]="Br"}function enlargeCoreSlots(){setCSS(`\n\t\t\t.i-stat__cores {\n\t\t\t\tpadding: 4px 0;\n\t\t\t}\n\n\t\t\t.i-stat__core {\n\t\t\t\tfont-size: 140%;\n\t\t\t}\n\t\t`)}function arrangeButtons(){const buttons=[$(".sbgcui_jumpToButton"),$(".info .popup-close"),$(".sbgcui_navbutton")];function toggle(value){buttons.map((button=>button.appendTo(value?".i-stat .i-buttons":".info.popup")))}buttons.map((button=>button.clone().appendTo(".info.popup").hide()));features.on("toggle",(({feature:feature,value:value})=>{if(feature.key===arrangeButtons.name){toggle(value)}}),{});toggle(true);setCSS(`\n\t\t\t[data-feat-arrangeButtons] .i-stat .i-buttons {\n\t\t\t\t--buttons-container: 90vw;\n\t\t\t\t--buttons-gap: 4px;\n\t\t\t\t--buttons-border: 1.9px;\n\t\t\t\t--buttons-cols: 7;\n\n\t\t\t\t--buttons-col-width: calc((var(--buttons-container) - (var(--buttons-cols) - 1) * var(--buttons-gap)) / var(--buttons-cols));\n\t\t\t\t--discover-alt-button-width: calc(var(--buttons-col-width) + 0.5 * var(--buttons-border));\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .i-stat .i-buttons {\n\t\t\t\tgap: var(--buttons-gap) !important;\n\t\t\t\tdirection: rtl !important;\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .i-stat .i-buttons button {\n\t\t\t\tborder-width: 2px;\n\t\t\t\tmin-height: var(--buttons-col-width) !important;\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] #discover {\n\t\t\t\twidth: var(--buttons-container);\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] #discover:after {\n\t\t\t\tcontent: '';\n\t\t\t\twidth: calc(2 * var(--buttons-col-width) + var(--buttons-gap));\n\t\t\t\theight: var(--buttons-col-width);\n\t\t\t\ttransform: none;\n\t\t\t\tleft: calc(var(--buttons-col-width) + var(--buttons-gap) - var(--buttons-border));\n\t\t\t\ttop: calc(-1 * var(--buttons-border) + var(--buttons-col-width) + var(--buttons-gap));\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tline-height: calc(var(--buttons-col-width) - 2 * var(--buttons-border));\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] #deploy,\n\t\t\t[data-feat-arrangeButtons] #draw {\n\t\t\t\twidth: calc(2 * var(--buttons-col-width) + var(--buttons-gap));\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] #repair,\n\t\t\t[data-feat-arrangeButtons] #eui-repair {\n\t\t\t\twidth: calc(3 * var(--buttons-col-width) + 2 * var(--buttons-gap));\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .sbgcui_no_loot,\n\t\t\t[data-feat-arrangeButtons] .sbgcui_no_refs {\n\t\t\t\twidth: var(--discover-alt-button-width);\n\t\t\t\tpadding: 0 calc(0.5 * var(--buttons-gap));\n\t\t\t\tborder-color: currentColor !important;\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .sbgcui_no_loot:before,\n\t\t\t[data-feat-arrangeButtons] .sbgcui_no_refs:before {\n\t\t\t\tmax-width: 1.5em;\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .sbgcui_jumpToButton,\n\t\t\t[data-feat-arrangeButtons] .popup-close,\n\t\t\t[data-feat-arrangeButtons] .sbgcui_navbutton {\n\t\t\t\tposition: relative;\n\t\t\t\torder: 1;\n\t\t\t\tbottom: auto;\n\t\t\t\tright: auto;\n\t\t\t\tleft: auto;\n\t\t\t\twidth: var(--buttons-col-width);\n\t\t\t\theight: var(--buttons-col-width) !important;\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .sbgcui_navbutton {\n\t\t\t\tleft: calc(-2 * var(--buttons-col-width) - 2 * var(--buttons-gap));\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .sbgcui_jumpToButton {\n\t\t\t\tright: calc(-2 * var(--buttons-col-width) - 2 * var(--buttons-gap));\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .sbgcui_jumpToButton:before,\n\t\t\t[data-feat-arrangeButtons] .sbgcui_navbutton:before {\n\t\t\t\tbottom: 0;\n\t\t\t\tright: 0;\n\t\t\t\twidth: 50%;\n\t\t\t\theight: 50%;\n\t\t\t\ttransform: translate(-50%, -50%);border: none;\n\t\t\t\tborder-radius: 0;\n\t\t\t\tbox-shadow: none;\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .popup-close {\n\t\t\t\twidth: var(--buttons-col-width) !important;\n\t\t\t\theight: var(--buttons-col-width) !important;\n\t\t\t}\n\n\t\t\t[data-feat-arrangeButtons] .popup-close:before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t`)}function colorizeTimer(){setCSS(`\n\t\t\t[data-feat-colorizeTimer] #discover:after {\n\t\t\t\tborder: var(--buttons-border) solid currentColor;\n\t\t\t\tcolor: var(--ingress-btn-border-color);\n\t\t\t\tborder-color: currentColor;\n\t\t\t\tline-height: calc(var(--buttons-col-width) - 3 * var(--buttons-border));\n\t\t\t}\n\n\t\t\t[data-feat-colorizeTimer] #discover[data-time]:after {\n\t\t\t\tcolor: var(--ingress-btn-disabled-color);\n\t\t\t\tborder-color: var(--ingress-btn-disabled-accent-color);\n\t\t\t}\n\n\t\t\t[data-feat-colorizeTimer] #discover[data-time][data-remain]:after {\n\t\t\t\tbackground: none;\n\t\t\t\tborder-color: currentColor;\n\t\t\t}\n\n\t\t\t[data-feat-colorizeTimer] #discover[data-time][data-remain="4"]:after {\n\t\t\t\tcolor: var(--ingress-btn-border-color);\n\t\t\t}\n\n\t\t\t[data-feat-colorizeTimer] #discover[data-time][data-remain="3"]:after {\n\t\t\t\tcolor: white;\n\t\t\t}\n\n\t\t\t[data-feat-colorizeTimer] #discover[data-time][data-remain="2"]:after {\n\t\t\t\tcolor: yellow;\n\t\t\t}\n\n\t\t\t[data-feat-colorizeTimer] #discover[data-time][data-remain="1"]:after {\n\t\t\t\tcolor: orange;\n\t\t\t}\n\t\t`)}function replaceSwipeWithButton(arrow){arrow.hide();function createTouch(touchData){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q;const touch={clientX:(_a=touchData.clientX)!==null&&_a!==void 0?_a:0,clientY:(_b=touchData.clientY)!==null&&_b!==void 0?_b:0,pageX:(_d=(_c=touchData.pageX)!==null&&_c!==void 0?_c:touchData.clientX)!==null&&_d!==void 0?_d:0,pageY:(_f=(_e=touchData.pageY)!==null&&_e!==void 0?_e:touchData.clientY)!==null&&_f!==void 0?_f:0,screenX:(_h=(_g=touchData.screenX)!==null&&_g!==void 0?_g:touchData.clientX)!==null&&_h!==void 0?_h:0,screenY:(_k=(_j=touchData.screenY)!==null&&_j!==void 0?_j:touchData.clientY)!==null&&_k!==void 0?_k:0,force:(_l=touchData.force)!==null&&_l!==void 0?_l:0,identifier:(_m=touchData.identifier)!==null&&_m!==void 0?_m:0,radiusX:(_o=touchData.radiusX)!==null&&_o!==void 0?_o:1,radiusY:(_p=touchData.radiusY)!==null&&_p!==void 0?_p:1,rotationAngle:(_q=touchData.rotationAngle)!==null&&_q!==void 0?_q:0,target:touchData.target};const touches=[touch];const set=new Set(touches);return{touches:{length:set.size,item:index=>index===0?touch:null,[Symbol.iterator]:set[Symbol.iterator]}}}function swipe(target,[startX,startY],[endX,endY]){const identifier=Math.random()*Number.MAX_SAFE_INTEGER;const startTouch=createTouch({target:target,identifier:identifier,clientX:startX,clientY:startY});const endTouch=createTouch({target:target,identifier:identifier,clientX:endX,clientY:endY});const touchStartHandlers=target.getEventHandlers("touchstart").filter((f=>f.name==="touchStartHandler"));const touchMoveHandlers=target.getEventHandlers("touchmove").filter((f=>f.name==="touchMoveHandler"));const touchEndHandlers=target.getEventHandlers("touchend").filter((f=>f.name==="touchEndHandler"));touchStartHandlers.map((handler=>{handler(startTouch)}));touchMoveHandlers.map((handler=>{handler(startTouch)}));touchMoveHandlers.map((handler=>{handler(endTouch)}));touchEndHandlers.map((handler=>{handler(endTouch)}))}const button=$("<button></button>").addClass("next").html('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40" width="40" height="40" focusable="false"><path d="m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z"></path></svg>').on("click",(ev=>{const infoPopup=document.querySelector(".info.popup");swipe(infoPopup,[200,0],[0,0]);ev.stopPropagation();return false})).appendTo($("#discover"));new MutationObserver((mutations=>mutations.filter((({attributeName:attributeName})=>attributeName==="class")).map((()=>{button.prop("disabled",arrow.hasClass("sbgcui_hidden"))})))).observe(arrow.get(0),{attributes:true});setCSS(`\n\t\t\t.i-stat .i-buttons .next {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t[data-feat-replaceSwipeWithButton] .i-stat .i-buttons .next {\n\t\t\t\tdisplay: block;\n\t\t\t\tposition: absolute;\n\t\t\t\twidth: calc(2 * var(--buttons-col-width) + var(--buttons-gap));\n\t\t\t\theight: var(--buttons-col-width);\n\t\t\t\tright: calc(var(--buttons-col-width) + var(--buttons-gap) - var(--buttons-border));\n\t\t\t\ttop: calc(-1 * var(--buttons-border) + var(--buttons-col-width) + var(--buttons-gap));\n\t\t\t\tcolor: var(--ingress-btn-color);\n\t\t\t\tbackground: linear-gradient(to top,\n\t\t\t\t\tvar(--ingress-btn-glow-color) 0%,\n\t\t\t\t\tvar(--ingress-btn-bg-color) 30%,\n\t\t\t\t\tvar(--ingress-btn-bg-color) 70%,\n\t\t\t\t\tvar(--ingress-btn-glow-color) 100%), var(--ingress-btn-bg-color);\n\t\t\t\tborder: 2px solid var(--ingress-btn-border-color);\n\t\t\t}\n\n\t\t\t[data-feat-replaceSwipeWithButton] .i-stat .i-buttons .next:disabled {\n\t\t\t\tcolor: var(--ingress-btn-disabled-color);\n\t\t\t\tbackground: var(--ingress-btn-disabled-bg-color);\n\t\t\t\tborder-color: var(--ingress-btn-disabled-accent-color);\n\t\t\t}\n\n\t\t\t[data-feat-replaceSwipeWithButton] .i-stat .i-buttons .next:active {\n\t\t\t\tfilter: saturate(2);\n\t\t\t}\n\n\t\t\t[data-feat-replaceSwipeWithButton] .i-stat .i-buttons .next svg {\n\t\t\t\theight: 16px;\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 2px;\n\t\t\t}\n\n\t\t\t[data-feat-replaceSwipeWithButton] .i-stat .i-buttons .next svg path {\n\t\t\t\tfill: currentColor;\n\t\t\t}\n\t\t`)}function hideCloseButton(){$("#draw").on("click",(ev=>$(".draw-slider-buttons button").css({height:`${$(ev.target).outerHeight()}px`})));setCSS(`\n\t\t\t[data-feat-hideCloseButton] .popup-close,\n\t\t\t[data-feat-hideCloseButton] #inventory__close,\n\t\t\t[data-feat-hideCloseButton] #draw-slider-close {\n\t\t\t\tdisplay: none !important;\n\t\t\t}\n\n\t\t\t[data-feat-hideCloseButton] .draw-slider-buttons {\n\t\t\t\tpadding: 0 calc(5%);\n\t\t\t\tgap: 0.25em;\n\t\t\t}\n\n\t\t\t[data-feat-hideCloseButton] .draw-slider-buttons button {\n\t\t\t\tmax-width: none !important;\n\t\t\t\tpadding: 6px;\n\t\t\t\tfont-size: 1.1em;\n\t\t\t}\n\n\t\t\t[data-feat-hideCloseButton] .sbgcui_navbutton {\n\t\t\t\tleft: calc(-2.5 * var(--buttons-col-width) - 2.5 * var(--buttons-gap));\n\t\t\t}\n\n\t\t\t[data-feat-hideCloseButton] .sbgcui_jumpToButton {\n\t\t\t\tright: calc(-2.5 * var(--buttons-col-width) - 2.5 * var(--buttons-gap));\n\t\t\t}\n\n\t\t\t[data-feat-hideCloseButton] .i-stat .i-buttons .next,\n\t\t\t[data-feat-hideCloseButton] #discover:after {\n\t\t\t\twidth: calc(2.5 * var(--buttons-col-width) + 1.5 * var(--buttons-gap));\n\t\t\t}\n\t\t`)}function hideRepairButton(){setCSS(`\n\t\t\t[data-feat-hideRepairButton] #repair,\n\t\t\t[data-feat-hideRepairButton] #eui-repair {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t[data-feat-hideRepairButton] #deploy,\n\t\t\t[data-feat-hideRepairButton] #draw {\n\t\t\t\twidth: calc((var(--buttons-container) - var(--buttons-gap)) / 2);\n\t\t\t}\n\n\t\t`)}function selectTargetPointByClick(){(showInfo=>{window.__sbg_function_showInfo=function(data){if(!$("#draw-slider").is(":visible")){showInfo(data)}else{const slide=$(`#draw-slider li[data-point="${data}"]`);if(slide.length>0){window.__sbg_variable_draw_slider.get().go(slide.index())}}}})(window.__sbg_function_showInfo)}function highlightSelectedTargetPoint(){const highlightsLayer=addLayer("highlights","points");(clear=>{window.__sbg_variable_temp_lines_source.get().clear=function(fast){clear.call(this,fast);highlightsLayer.getSource().clear(fast)}})(window.__sbg_variable_temp_lines_source.get().clear);(manageDrawing=>{window.__sbg_function_manageDrawing=function(event){manageDrawing(event);const tempLine=window.__sbg_variable_temp_lines_source.get().getFeatures()[0];const tempLineCoords=tempLine.getGeometry().flatCoordinates;const highlightFeature=new window.ol.Feature({geometry:new window.ol.geom.Circle([tempLineCoords.slice(tempLineCoords.length-2)],16)});const highlightStyle=new window.ol.style.Style({stroke:new window.ol.style.Stroke({color:"#F80",width:3})});highlightFeature.setStyle(highlightStyle);highlightsLayer.getSource().addFeature(highlightFeature)}})(window.__sbg_function_manageDrawing)}function matchDrawSliderButtons(slider){$("#draw").on("click",(ev=>{slider.css({bottom:`${$(window).height()-$(ev.target).offset().top-$("#draw").outerHeight()}px`});slider.find(".draw-slider-buttons").css({padding:`0 ${$(ev.target).offset().left}px`})}));setCSS(`\n\t\t\t.draw-slider-buttons {\n\t\t\t\tgap: 0.25em;\n\t\t\t}\n\n\t\t\t[data-feat-matchDrawSliderButtons] .draw-slider-wrp {\n\t\t\t\ttransform: translate(-50%, 0);\n\t\t\t\ttop: auto;\n\t\t\t}\n\n\t\t\t[data-feat-matchDrawSliderButtons] .draw-slider-buttons {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t\t[data-feat-matchDrawSliderButtons] .sbgcui_drawslider_sort {\n\t\t\t\tposition: static;\n\t\t\t\ttop: auto;\n\t\t\t\twidth: auto;\n\t\t\t}\n\n\t\t\t[data-feat-matchDrawSliderButtons] .sbgcui_drawslider_fit {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t[data-feat-matchDrawSliderButtons] #draw-slider-close {\n\t\t\t\torder: 1;\n\t\t\t}\n\t\t`)}function enableOldWebViewCompatibility(){setCSS(`\n\t\t\t@media (max-width: 425px) {\n\t\t\t\t.popup.pp-center {\n\t\t\t\t\ttop: 0 !important;\n\t\t\t\t\tleft: 0 !important;\n\t\t\t\t\ttransform: none !important;\n\t\t\t\t}\n\t\t\t}\n\t\t`)}function testNotifications(){window.__sbg_cui_function_getNotifs=function(latest){if(typeof latest==="number"){return 1}if(typeof latest==="undefined"){return[{id:1,g:"guid",na:"TestUser",ta:0,ti:(new Date).toISOString(),c:[0,0],t:"test point"}]}throw new Error(`'latest' is not number or undefined: ${latest}`)}}class Builder{constructor(buttonsSection){this.features={};this.points={};this.pointStyles={};this.lines=new CoordsMap;this.regions=new CoordsMap;this.linesMap=new CoordsMap;this.regionsMap=new CoordsMap;this.data=new BuilderData(this);this.ownTeam=0;this.drawTeam=4;this.maxDrawAttempts=3;this.initCSS();this.initTeam();this.initLayers();const buttonContainer=this.initButtons(buttonsSection);this.initFeatures(buttonContainer);this.initData();this.initMapClick();this.initStates();this.initHelpPopup();this.initRoutePopup();this.initCopyPaste();Object.defineProperty(window,"builder",{value:this})}setHome(previousState){if(previousState){if(!confirm(labels.builder.messages.deleteHome.toString())){return false}localStorage.removeItem("homeCoords")}else{if(!confirm(labels.builder.messages.setHome.toString())){return false}localStorage.setItem("homeCoords",JSON.stringify(window.__sbg_variable_map.get().getView().getCenter()))}return true}toggleAllLines(previousState){layers.get("lines").setVisible(!previousState);layers.get("regions").setVisible(!previousState);layers.get("regions_shared").setVisible(!previousState&&this.features.builder.getState());return true}toggle(previousState){layers.get("lines_built").setVisible(!previousState);layers.get("regions_built").setVisible(!previousState);layers.get("regions_shared").setVisible(!previousState&&this.features.allLines.getState());this.features.builder.setState(!previousState);this.data.updateStates()}undo(previousState){var _a;if(!previousState){return false}const{lineCoords:lineCoords}=(_a=this.data.pop())!==null&&_a!==void 0?_a:{};if(lineCoords){const lastLine=this.lines.get(lineCoords);if(!lastLine){console.log(`undo: line not found, coords: ${JSON.stringify(lineCoords)}`);return false}layers.get("lines_built").getSource().removeFeature(lastLine);this.lines.deleteMine(lineCoords);const regions=this.regionsMap.get(lineCoords);if(regions){regions.filter((({mine:mine})=>mine)).forEach((({region:region})=>{layers.get("regions_built").getSource().removeFeature(region);layers.get("regions_shared").getSource().removeFeature(region);this.regions.deleteMine(this.getRegionCoords(region))}))}}return false}clear(previousState){if(!previousState){return false}layers.get("lines_built").getSource().clear();layers.get("regions_built").getSource().clear();layers.get("regions_shared").getSource().clear();this.data.clear();this.lines.clearMine();this.regions.clearMine();this.linesMap.clearMine();this.regionsMap.clearMine();this.startPoint=undefined;return false}printRoute(previousState){if(!previousState){return false}const route=this.data.getRoute();$(".route.popup").find("textarea").val(route).end().removeClass("hidden");return undefined}copy(previousState){return this.data.copy(previousState)}paste(previousState){return this.data.paste(previousState)}showHelp(_previousState){$(".help").removeClass("hidden")}getCoords(flatCoordinates){const coordsList=window.ol.proj.toLonLat(flatCoordinates);return coordsList.map((coord=>parseFloat(coord.toFixed(6))))}getFlatCoordinates(coords){return window.ol.proj.fromLonLat(coords)}getArcFlatCoordinates(coordsList){const arcCoords=[];for(let i=1;i<coordsList.length;i++){const arc=window.turf.greatCircle(coordsList[i-1],coordsList[i],{npoints:this.getNPoints()});arcCoords.push(arc.geometry.coordinates)}return arcCoords.flat().map((coords=>this.getFlatCoordinates(coords)))}getPointCoords(point){const{flatCoordinates:flatCoordinates}=point.getGeometry();return this.getCoords(flatCoordinates)}getLineCoords(line){const{flatCoordinates:flatCoordinates}=line.getGeometry();const startCoords=this.getCoords([flatCoordinates[0],flatCoordinates[1]]);const endCoords=this.getCoords([flatCoordinates[flatCoordinates.length-2],flatCoordinates[flatCoordinates.length-1]]);return this.createLineCoords(startCoords,endCoords)}getRegionCoords(region){const{flatCoordinates:flatCoordinates}=region.getGeometry();const startCoords=this.getCoords([flatCoordinates[0],flatCoordinates[1]]);const middleCoords=this.getCoords([flatCoordinates[flatCoordinates.length*1/3],flatCoordinates[flatCoordinates.length*1/3+1]]);const endCoords=this.getCoords([flatCoordinates[flatCoordinates.length*2/3],flatCoordinates[flatCoordinates.length*2/3+1]]);return this.createRegionCoords(startCoords,middleCoords,endCoords)}createLineCoords(...coordsList){const sortedCoords=coordsList.sort((function(c1,c2){return c1[0]-c2[0]||c1[1]-c2[1]}));return[sortedCoords[0],sortedCoords[1]]}createRegionCoords(...coordsList){const sortedCoords=coordsList.sort((function(c1,c2){return c1[0]-c2[0]||c1[1]-c2[1]}));return[sortedCoords[0],sortedCoords[1],sortedCoords[2],sortedCoords[0]]}addLine(line,lineCoords,{mine:mine}){if(![this.ownTeam,this.drawTeam].includes(line.getProperties().team)){return}this.linesMap.create(lineCoords[0],[]).push({coords:lineCoords[1],mine:mine});this.linesMap.create(lineCoords[1],[]).push({coords:lineCoords[0],mine:mine});this.lines.set(lineCoords,line);this.checkRegions(lineCoords,{mine:mine})}addRegion(region,regionCoords,{mine:mine}){if(![this.ownTeam,this.drawTeam].includes(region.getProperties().team)){return}this.regionsMap.create([regionCoords[0],regionCoords[1]],[]).push({region:region,mine:mine});this.regionsMap.create([regionCoords[0],regionCoords[2]],[]).push({region:region,mine:mine});this.regionsMap.create([regionCoords[1],regionCoords[2]],[]).push({region:region,mine:mine});this.regions.set(regionCoords,region)}buildLine({linePoints:linePoints,lineCoords:lineCoords},attempt=0){var _a,_b;const id=`line.built.${(new Date).getTime()}`;const layerName="lines_built";const existingLine=this.lines.get(lineCoords);if(existingLine){if(this.features.allLines.getState()||existingLine.getProperties().mine){console.log(`BUILDER buildLine cancelled, already exists, coords: ${JSON.stringify(lineCoords)}`);return}else{console.log(`BUILDER buildLine duplicated, layer: ${layerName}, coords: ${JSON.stringify(lineCoords)}`)}}else{console.log(`BUILDER buildLine, layer: ${layerName}, attempt: ${attempt}, coords: ${JSON.stringify(lineCoords)}`)}const arcFlatCoordinates=this.getArcFlatCoordinates(lineCoords);const feature=new window.ol.Feature({geometry:new window.ol.geom.LineString(arcFlatCoordinates)});feature.setId(id);feature.setProperties({team:this.drawTeam,mine:true});feature.setStyle(new window.ol.style.Style({stroke:new window.ol.style.Stroke({color:(_b=(_a=window.__sbg_variable_TeamColors.get()[this.drawTeam])===null||_a===void 0?void 0:_a.stroke)!==null&&_b!==void 0?_b:"",width:2})}));const source=layers.get(layerName).getSource();const featuresCount=source.getFeatures().length;source.addFeature(feature);if(source.getFeatures().length===featuresCount){attempt++;console.log(`BUILDER buildLine failed, attempt: ${attempt}, coords: ${JSON.stringify(lineCoords)}`);if(attempt>=this.maxDrawAttempts){return}this.buildLine({linePoints:linePoints,lineCoords:lineCoords},attempt);return}this.addLine(feature,lineCoords,{mine:true});this.data.add({linePoints:linePoints,lineCoords:lineCoords});return feature}buildRegion(coordsList,shared,attempt=0){var _a,_b;const id=`region.built.${(new Date).getTime()}`;const layerName=shared?"regions_shared":"regions_built";const regionCoords=this.createRegionCoords(...coordsList);const existingRegion=this.regions.get(regionCoords);if(existingRegion){if(!this.features.allLines.getState()&&!shared&&(!existingRegion.getProperties().mine||existingRegion.getProperties().shared)){console.log(`BUILDER buildRegion duplicated, layer: ${layerName}, coords: ${JSON.stringify(regionCoords)}`)}else{console.log(`BUILDER buildRegion cancelled, already exists, coords: ${JSON.stringify(regionCoords)}`);return}}else{console.log(`BUILDER buildRegion, layer: ${layerName}, coords: ${JSON.stringify(regionCoords)}`)}const arcFlatCoordinates=this.getArcFlatCoordinates(regionCoords);const feature=new window.ol.Feature({geometry:new window.ol.geom.Polygon([arcFlatCoordinates])});feature.setId(id);feature.setProperties({team:this.drawTeam,mine:true,shared:shared});feature.setStyle(new window.ol.style.Style({fill:new window.ol.style.Fill({color:(_b=(_a=window.__sbg_variable_TeamColors.get()[this.drawTeam])===null||_a===void 0?void 0:_a.fill)!==null&&_b!==void 0?_b:""})}));const layer=layers.get(layerName);const source=layer.getSource();const featuresCount=source.getFeatures().length;source.addFeature(feature);if(source.getFeatures().length===featuresCount){attempt++;console.error(`BUILDER buildRegion failed, attempt: ${attempt}, coords: ${JSON.stringify(regionCoords)}`);if(attempt>=this.maxDrawAttempts){return}this.buildRegion(coordsList,shared,attempt);return}this.addRegion(feature,regionCoords,{mine:true});return feature}checkRegions(lineCoords,{mine:mine}){const startSiblings=this.linesMap.get(lineCoords[0]);const endSiblings=this.linesMap.get(lineCoords[1]);if(!startSiblings||!endSiblings){return}for(const startSibling of startSiblings){for(const endSibling of endSiblings){if(startSibling.coords[0]===endSibling.coords[0]&&startSibling.coords[1]===endSibling.coords[1]){if(mine||startSibling.mine||endSibling.mine){const shared=!(mine&&startSibling.mine&&endSibling.mine);this.buildRegion([...lineCoords,startSibling.coords],shared)}}}}}initCSS(){setCSS(`\n\t\t\t\t.builder {\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tmargin-top: 1em;\n\t\t\t\t\tpointer-events: all;\n\t\t\t\t\twidth: 120px;\n\t\t\t\t}\n\n\t\t\t\t.sbgcui_settings ~ .builder {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.sbgcui_settings.sbgcui_hidden ~ .builder {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\n\t\t\t\t.builder button {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tmargin-bottom: 0.25em;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\n\t\t\t\t.builder button.active {\n\t\t\t\t\tbackground: white;\n\t\t\t\t\tcolor: #414141;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t}\n\t\t\t`)}initTeam(){const style=$("#self-info__name").attr("style");if(style){const matches=style.match(/team-(\d+)/);if(matches){this.ownTeam=parseInt(matches[1])}}window.__sbg_variable_TeamColors.get().push({fill:"#FF880030",stroke:"#F80"})}initLayers(){this.addLayer("lines_built","lines");this.addLayer("regions_built","regions");this.addLayer("regions_shared","regions");layers.get("lines").getSource().on("addfeature",(ev=>{this.addLine(ev.feature,this.getLineCoords(ev.feature),{mine:false})}));layers.get("regions").getSource().on("addfeature",(ev=>{const feature=ev.feature;this.addRegion(feature,this.getRegionCoords(feature),{mine:false})}));layers.get("lines").getSource().getFeatures().forEach((line=>{this.addLine(line,this.getLineCoords(line),{mine:false})}));layers.get("regions").getSource().getFeatures().forEach((region=>{this.addRegion(region,this.getRegionCoords(region),{mine:false})}))}addLayer(layerName,layerLike){const layer=addLayer(layerName,layerLike);layers.set(layerName,layer)}initButtons(container){return $("<div></div>").addClass("builder").appendTo(container)}initFeatures(buttonContainer){const initialStates={home:false,allLines:true,builder:false,undo:false,clear:false,route:false,copy:false,paste:false,help:true};const actions={home:this.setHome,allLines:this.toggleAllLines,builder:this.toggle,undo:this.undo,clear:this.clear,route:this.printRoute,copy:this.copy,paste:this.paste,help:this.showHelp};for(const button of builderButtons){this.features[button]=new BuilderFeature({name:button,buttonContainer:buttonContainer,initialState:initialStates[button],action:actions[button],label:labels.builder.buttons[button],builder:this})}}initData(){this.data=new BuilderData(this);this.data.load()}initMapClick(){const originalMapClick=window.__sbg_variable_map.get().getListeners("click")[0];const extendedMapClick=ev=>{if(this.features.builder.getState()){this.mapClick(ev)}else{if(originalMapClick){originalMapClick(ev)}}};if(originalMapClick){window.__sbg_variable_map.get().un("click",originalMapClick)}window.__sbg_variable_map.get().on("click",extendedMapClick)}mapClick(ev){window.__sbg_variable_map.get().forEachFeatureAtPixel(ev.pixel,((feature,layer)=>{console.log(`BUILDER click layer: ${layer.getProperties().name}`);if(layer.getProperties().name!=="points"){return}const point=feature;const pointCoords=this.getPointCoords(point);this.setPointDrawing(point,true);const[startPoint,endPoint]=[this.startPoint,point];if(!startPoint){console.log(`BUILDER clicked: start coords: ${JSON.stringify(pointCoords)}`);this.startPoint=point;return}if(endPoint.getId()===startPoint.getId()){return}console.log(`BUILDER clicked: end coords: ${JSON.stringify(pointCoords)}`);void(async()=>{const lineData=await LineData.load([startPoint,endPoint],this);const lineBuilt=this.buildLine(lineData);this.setPointDrawing(startPoint,false);this.setPointDrawing(endPoint,false);if(lineBuilt){this.startPoint=undefined}})()}))}getNPoints(){const zoom=window.__sbg_variable_map.get().getView().getZoom();if(zoom>10){return 5}if(zoom>7){return 25}return 50}setPointDrawing(point,drawing){if(drawing){this.pointStyles[point.getId()]=point.getStyle();point.setStyle(window.__sbg_variable_FeatureStyles.get().POINT(point.getGeometry().flatCoordinates,this.drawTeam,1,true))}else{const style=this.pointStyles[point.getId()];if(style){point.setStyle(style)}else{throw new Error(`Attempt to get non-existing style for point id = '${point.getId()}'`)}}}initStates(){this.toggleAllLines(!this.features.allLines.getState());this.toggle(!this.features.builder.getState());this.data.updateStates()}initHelpPopup(){const contents=`\n\t\t\t\t<h3>${labels.builder.help.title.toString()}</h3>\n\t\t\t\t<b>${labels.builder.help.buttons.toString()}:</b>\n\t\t\t\t<ul>\n\t\t\t\t${Object.values(labels.builder.buttons).map((button=>`<li><b>${button.title.toString()}</b> - ${button.description.toString()}</li>`)).join("\n")}\n\t\t\t\t</ul>\n\t\t\t\t<b>${labels.builder.issues.title.toString()}:</b>\n\t\t\t\t<ul>\n\t\t\t\t${labels.builder.issues.list.map((issue=>`<li>${issue.toString()}</li>`)).join("\n")}\n\t\t\t\t</ul>\n\t\t\t`;createPopup("help").prepend(contents)}initRoutePopup(){const routeElement=$("<textarea></textarea>").on("click",(ev=>{ev.stopPropagation()})).on("keydown",(ev=>{ev.stopPropagation()}));createPopup("route").prepend(routeElement)}initCopyPaste(){$(document).on("keydown",(ev=>{if(ev.ctrlKey){switch(ev.key){case"c":return this.data.copy(true);case"v":return this.data.paste(true)}}return true}))}}class BuilderFeature{constructor({name:name,action:action,initialState:initialState,label:label,buttonContainer:buttonContainer,builder:builder}){this.name=name;this.action=action.bind(builder);this.button=this.createButton(label,buttonContainer);const value=this.loadState(initialState);this.state=new Proxy({value:value},{get:(data,property)=>data[property],set:(data,property,value)=>{const storageKey=this.getStorageKey();localStorage.setItem(storageKey,value?"1":"0");data[property]=value;this.setButtonState();return true}});this.setButtonState()}getState(){return this.state.value}setState(value){this.state.value=value}setButtonState(){this.button.toggleClass("active",this.state.value)}loadState(initialState){const storageKey=this.getStorageKey();const storageValue=localStorage.getItem(storageKey);return storageValue?storageValue==="1":initialState}getStorageKey(){return`sbg-plus-state-${this.name}`}createButton(label,buttonContainer){const element=$("<button></button>").html(label.title.toString().toUpperCase()).attr("title",label.description.toString()).appendTo(buttonContainer);element.on("click",(()=>{if(this.action(this.state.value)){this.state.value=!this.state.value}}));return element}}class BuilderData{constructor(builder){this.storageKey="builderData";this.builder=builder;this.data=[]}static pack(data){const pointsMap=new CoordsMap;const lines=[];for(const{lineCoords:lineCoords,linePoints:linePoints}of data){lines.push(lineCoords);linePoints.forEach((linePoint=>{pointsMap.set(linePoint.coords,linePoint)}))}return{points:pointsMap.getData(),lines:lines}}static unpack(pack){const data=[];const pointsMap=new CoordsMap(new Map(Object.entries(pack.points)));for(const lineCoords of pack.lines){const points=[pointsMap.get(lineCoords[0]),pointsMap.get(lineCoords[1])];const lineData=new LineData(points,lineCoords);data.push(lineData)}return data}add(lineData){this.data.push(lineData);this.updateStates();this.save()}pop(){const lastLineData=this.data.pop();this.updateStates();this.save();return lastLineData}clear(){this.data=[];this.updateStates();this.save()}count(){return this.data.length}updateStates(){const isActive=this.builder.features.builder.getState();const isData=this.data.length>0;this.builder.features.undo.setState(isActive&&isData);this.builder.features.clear.setState(isActive&&isData);this.builder.features.route.setState(isActive&&isData);this.builder.features.copy.setState(isActive&&isData);this.builder.features.paste.setState(isActive)}save(){localStorage.setItem(this.storageKey,JSON.stringify(BuilderData.pack(this.data)));console.log(`BUILDER saved lines: ${this.data.length}`)}load(){const stored=localStorage.getItem(this.storageKey);if(stored){this.set(stored)}}copy(previousState){if(!previousState){return false}void(async()=>{await navigator.clipboard.writeText(JSON.stringify(BuilderData.pack(this.data)));alert(labels.builder.messages.copied.toString())})();return undefined}paste(previousState){if(!previousState){return false}void(async()=>{const text=await navigator.clipboard.readText();if(!text.trim()){alert(labels.builder.validationErrors.empty.toString())}this.set(text)})();return undefined}getRoute(){return this.data.map((line=>line.linePoints.map((point=>point.title)).join(" => "))).join("\n")}set(text){const parsed=this.parse(text);if("error"in parsed){if(parsed.error){alert(parsed.error.toString())}else{alert(labels.builder.validationErrors.unknownError.toString())}return}const data=BuilderData.unpack(parsed.pack);for(const lineCoords of data){this.builder.buildLine(lineCoords)}return undefined}parse(text){let pack;try{pack=JSON.parse(text)}catch(ex){return{error:labels.builder.validationErrors.json}}const validator=new BuilderDataPackValidator(labels.builder.validationErrors);if(!validator.validate(pack)){return{error:validator.getError()}}return{pack:pack}}}class LineData{constructor(linePoints,lineCoords){this.linePoints=linePoints;this.lineCoords=lineCoords;this.linePoints=linePoints;this.lineCoords=lineCoords}static async load(points,builder){const promises=points.map((async point=>PointData.resolve(point,builder)));const linePoints=await Promise.all(promises);const lineCoords=builder.createLineCoords(linePoints[0].coords,linePoints[1].coords);return new LineData(linePoints,lineCoords)}}class PointData{constructor(guid,title,coords){this.guid=guid;this.title=title;this.coords=coords}static async resolve(point,builder){const guid=point.getId();const title=await PointData.getPointTitle(guid,builder.points);const coords=builder.getPointCoords(point);return new PointData(guid,title,coords)}static async getPointTitle(guid,points){const point=points[guid];if(point){return point}const{response:response}=await window.__sbg_function_apiQuery("point",{guid:guid});return points[guid]=response.data.t}}const validTypeOf=typeof{};class BuilderDataPackValidator{constructor(validationErrors){this.validationErrors=validationErrors}validate(pack){return this.checkObject(pack)&&this.checkObjectProperties(pack)&&this.checkPoints(pack.points)&&this.checkPointsCoords(pack.points)&&this.checkLines(pack.lines)&&this.checkLinesCoords(pack.lines)}getError(){return this.validationError}isArray(array,length,type){if(!Array.isArray(array)){return false}if(array.length!==length){return false}for(const item of array){if(typeof item!==type){return false}}return true}checkObject(pack){if(typeof pack!=="object"){this.validationError=this.validationErrors.object;return false}return true}checkObjectProperties(pack){if(!isObjectContaining(pack,{points:"object",lines:"object"})){this.validationError=this.validationErrors.objectProperties;return false}return true}checkPoints(points){if(!isRecord(points)||Object.values(points).filter((point=>!isObjectContaining(point,{guid:"string",title:"string",coords:"object"}))).length>0){this.validationError=this.validationErrors.pointProperties;return false}return true}checkPointsCoords(points){if(Object.values(points).map((point=>point.coords)).filter((coords=>!this.isArray(coords,2,"number"))).length>0){this.validationError=this.validationErrors.pointCoords;return false}return true}checkLines(lines){if(!Array.isArray(lines)||lines.filter((lineCoords=>!this.isArray(lineCoords,2,"object"))).length>0){this.validationError=this.validationErrors.lines;return false}return true}checkLinesCoords(lines){if(lines.flat().filter((coords=>!this.isArray(coords,2,"number"))).length>0){this.validationError=this.validationErrors.linesCoords;return false}return true}}class CoordsMap{constructor(data=new Map){this.data=data}getData(){return Object.fromEntries(this.data)}get(key){return this.data.get(this.stringifyKey(key))}set(key,value){this.data.set(this.stringifyKey(key),value)}create(key,initialValue){if(!this.has(key)){this.set(key,initialValue)}return this.get(key)}has(key){return this.data.has(this.stringifyKey(key))}forEach(func){this.data.forEach(((value,key)=>{func(value,key)}))}deleteMine(key){const stringKey=this.stringifyKey(key);const item=this.data.get(stringKey);if(item instanceof window.ol.Feature&&item.getProperties().mine){this.data.delete(stringKey)}if(Array.isArray(item)){const others=item.filter((subItem=>!subItem.mine));if(others.length===0){this.data.delete(stringKey)}else{this.data.set(stringKey,others)}}}clearMine(){Array.from(this.data.keys()).forEach((key=>{this.deleteMine(key)}))}stringifyKey(key){return typeof key==="string"?key:key.map((item=>Array.isArray(item)?item.join(","):item)).join(",")}}class SettingsPopup{constructor(){this.sections={};this.checkboxes={};this.render();Object.typedKeys(features.groups,featureGroupNames).map((group=>{const groupFeatures=features.groups[group].filter((feature=>feature.isAvailable()));if(groupFeatures.length===0&&group!=="custom"){return}this.addGroup(group);groupFeatures.map((feature=>{this.addFeature(feature)}))}));features.on("add",(feature=>{this.addFeature(feature)}),{});features.on("inherit",(({feature:feature,value:value})=>{this.check(feature,value)}),{})}addFeature(feature){const checkbox=this.renderFeatureCheckbox(feature);const setting=this.renderSetting(feature.isSimple(),checkbox,feature.label);this.sections[feature.group].find("h4").before(setting);this.checkboxes[feature.key]=checkbox}check(feature,value){var _a;settings.setFeature(feature.key,value);(_a=this.checkboxes[feature.key])===null||_a===void 0?void 0:_a.prop("checked",value)}render(){const parentSettingsPopup=$(".settings");const settingsPopup=createPopup("sbg-plus-settings",{roundClose:false}).appendTo(parentSettingsPopup);this.container=$("<div></div>").addClass("settings-content");const settingsTitle=$("<h3></h3>").text(labels.settings.title.toString());settingsPopup.prepend(settingsTitle,this.container);const saveButton=$("<button></button>").text(labels.save.toString()).on("click",(()=>{settings.save();window.location.reload()}));const logsButton=$("<button></button>").addClass("popup-button-secondary").text(labels.settings.logs.toString()).on("click",(()=>{void copyLogs()}));const advancedButton=$("<button></button>").addClass("popup-button-secondary").text(labels.settings.advanced.toString()).on("click",(()=>{advancedButton.toggleClass("popup-button-secondary");settingsPopup.toggleClass("advanced")}));settingsPopup.find(".buttons").prepend(saveButton);settingsPopup.find(".buttons").append(logsButton);settingsPopup.find(".buttons").append(advancedButton);const settingsButton=$("<button></button>").addClass("settings-section__button").text(labels.settings.button.toString()).on("click",(()=>settingsPopup.removeClass("hidden")));const settingsLabel=this.renderSetting(true,labels.settings.title,settingsButton);$(".settings .settings-section:first .settings-section__item:first").before(settingsLabel);const versionValue=$("<span></span>").text(`v${window.__sbg_plus_version}`);const versionLabel=this.renderSetting(true,labels.settings.version,versionValue);$('.settings [data-i18n="settings.about.version"]').parent().after(versionLabel)}addGroup(group){const featureGroup=featureGroups[group];const sectionTitle=$("<h4></h4>").text(new Label(featureGroup).toString());const section=$("<div></div>").addClass("settings-section").append(sectionTitle);this.sections[group]=section;if(this.container){this.container.append(section)}else{throw new Error(`Attempt to render section of group '${group}' to non existing container. Please render this.render() before adding groups`)}}renderSetting(isSimple,...children){const settingLabel=$("<label></label>").addClass("settings-section__item").toggleClass("simple",isSimple);for(const child of children){const element=child instanceof Label?$("<span></span>").text(child.toString()):child;settingLabel.append(element)}return settingLabel}renderFeatureCheckbox(feature){return $('<input type="checkbox" />').prop("checked",feature.isEnabled()).on("change",(ev=>{feature.setEnabled(ev.target.checked)}))}}void main()})();